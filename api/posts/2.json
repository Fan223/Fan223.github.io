{"total":72,"pageSize":12,"pageCount":6,"data":[{"title":"23 种设计模式总结","uid":"2236ff817b0fd532c388d0cf8bb4c954","slug":"BlogRepository/设计模式/23 种设计模式总结","date":"2022-12-30T08:53:46.000Z","updated":"2023-04-20T13:57:44.632Z","comments":true,"path":"api/articles/BlogRepository/设计模式/23 种设计模式总结.json","cover":"https://cover.png","text":"设计模式相关的详细知识见如下三篇： 设计模式之美总结（创建型篇）_凡 223 的博客 设计模式之美总结（结构型篇）_凡 223 的博客 设计模式之美总结（行为型篇）_凡 223 的博客 这里主要是对上面三篇内容的总结，用于清晰 23 种设计模式的原理概念和应用场景，以及它们之间的...","link":"","photos":[],"count_time":{"symbolsCount":"44k","symbolsTime":"40 mins."},"categories":[{"name":"设计模式","slug":"设计模式","count":8,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},{"title":"Java Integer.toBinaryString() 方法源码及原理解析（进制转换、位运算）","uid":"f836b7c416a11f5069436de43f7aa730","slug":"BlogRepository/Java/Java Integer.toBinaryString() 方法源码及原理解析（进制转换、位运算）","date":"2022-12-27T09:31:38.000Z","updated":"2023-04-20T13:57:44.601Z","comments":true,"path":"api/articles/BlogRepository/Java/Java Integer.toBinaryString() 方法源码及原理解析（进制转换、位运算）.json","cover":"https://cover.png","text":"1. 使用及源码概览Integer.toBinaryString() 方法用于将十进制整数转为二进制，如下例： 完整源码调用如下： public static String toBinaryString(int i) &#123; return toUnsignedString0...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"10 mins."},"categories":[{"name":"Java","slug":"Java","count":5,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":12,"path":"api/tags/Java.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},{"title":"设计模式之美总结（行为型篇）","uid":"27f6062000233c0b6c7b071a046007f7","slug":"BlogRepository/设计模式/设计模式之美总结（行为型篇）","date":"2022-12-26T09:25:29.000Z","updated":"2023-04-20T13:57:44.648Z","comments":true,"path":"api/articles/BlogRepository/设计模式/设计模式之美总结（行为型篇）.json","cover":"https://cover.png","text":"前五篇见： 设计模式之美总结（面向对象篇）_凡 223 的博客 设计模式之美总结（设计原则篇）_凡 223 的博客 设计模式之美总结（重构篇）_凡 223 的博客 设计模式之美总结（创建型篇）_凡 223 的博客 设计模式之美总结（结构型篇）_凡 223 的博客 创建型设计模式主...","link":"","photos":[],"count_time":{"symbolsCount":"140k","symbolsTime":"2:07"},"categories":[{"name":"设计模式","slug":"设计模式","count":8,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},{"title":"SpringBoot 结合 MyBatis-Plus 配置多数据源以及结合 p6spy 打印 SQL 日志","uid":"0e3cbfa1ef18be6a0efacfe867734435","slug":"BlogRepository/开发技术及框架/SpringBoot 结合 MyBatis-Plus 配置多数据源以及结合 p6spy 打印 SQL 日志","date":"2022-12-23T03:23:16.000Z","updated":"2023-04-20T13:57:44.632Z","comments":true,"path":"api/articles/BlogRepository/开发技术及框架/SpringBoot 结合 MyBatis-Plus 配置多数据源以及结合 p6spy 打印 SQL 日志.json","cover":"https://cover.png","text":"1. 配置多数据源官网：多数据源 | MyBatis-Plus (baomidou.com) 1.1 引入依赖&lt;dependency&gt; &lt;groupId&gt;com.baomidou&lt;&#x2F;groupId&gt; &lt;artifactId&gt...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"开发技术及框架","slug":"开发技术及框架","count":9,"path":"api/categories/开发技术及框架.json"}],"tags":[{"name":"MyBatis-Plus","slug":"MyBatis-Plus","count":2,"path":"api/tags/MyBatis-Plus.json"},{"name":"SpringBoot","slug":"SpringBoot","count":4,"path":"api/tags/SpringBoot.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},{"title":"设计模式之美总结（结构型篇）","uid":"dc36ba1463e60735e3396234d94e7099","slug":"BlogRepository/设计模式/设计模式之美总结（结构型篇）","date":"2022-12-21T01:59:11.000Z","updated":"2023-04-20T13:57:44.648Z","comments":true,"path":"api/articles/BlogRepository/设计模式/设计模式之美总结（结构型篇）.json","cover":"https://cover.png","text":"前四篇见： 设计模式之美总结（面向对象篇）_凡 223 的博客 设计模式之美总结（设计原则篇）_凡 223 的博客 设计模式之美总结（重构篇）_凡 223 的博客 设计模式之美总结（创建型篇）_凡 223 的博客 1. 代理模式（Proxy Design Pattern）1.1 ...","link":"","photos":[],"count_time":{"symbolsCount":"61k","symbolsTime":"55 mins."},"categories":[{"name":"设计模式","slug":"设计模式","count":8,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},{"title":"Vue3 总结（开发）","uid":"6c3cfbb59bb90aa0cd86d47a59e86094","slug":"BlogRepository/Vue/Vue3 总结（开发）","date":"2022-12-20T16:57:55.000Z","updated":"2023-04-20T13:57:44.617Z","comments":true,"path":"api/articles/BlogRepository/Vue/Vue3 总结（开发）.json","cover":"https://cover.png","text":"更详细的 API 和使用见：Vue2 总结（开发）_凡 223 的博客 1. Vue Router官网地址：Home | Vue Router (vuejs.org) 1.1 安装npm install vue-router@4 1.2 使用1.2.1 new Router 变成...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"Vue","slug":"Vue","count":4,"path":"api/categories/Vue.json"}],"tags":[{"name":"Vue","slug":"Vue","count":5,"path":"api/tags/Vue.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},{"title":"通过 Request 请求获取真实 IP 地址以及对应省份城市和系统浏览器信息","uid":"ac0a19fc42d1d09f368f9cb237bd1e7b","slug":"BlogRepository/开发实践/通过 Request 请求获取真实 IP 地址以及对应省份城市","date":"2022-12-16T08:20:26.000Z","updated":"2023-04-20T13:57:44.617Z","comments":true,"path":"api/articles/BlogRepository/开发实践/通过 Request 请求获取真实 IP 地址以及对应省份城市.json","cover":"https://cover.png","text":"1. 获取真实 IP 地址1.1 代码代码如下，这里的 CommonUtil.isBlank() 为封装的判空方法 public static String getIpAddress(HttpServletRequest request) &#123; &#x2F;&#x2F; ...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"开发实践","slug":"开发实践","count":6,"path":"api/categories/开发实践.json"}],"tags":[{"name":"GeoIP2","slug":"GeoIP2","count":1,"path":"api/tags/GeoIP2.json"},{"name":"UserAgentUtils","slug":"UserAgentUtils","count":1,"path":"api/tags/UserAgentUtils.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},{"title":"基础微服务项目架构构建总结","uid":"1777dd13afd91a7e9bd508c03cf35724","slug":"BlogRepository/开发实践/基础微服务项目架构构建总结","date":"2022-11-16T06:08:04.000Z","updated":"2023-04-20T13:57:44.617Z","comments":true,"path":"api/articles/BlogRepository/开发实践/基础微服务项目架构构建总结.json","cover":"https://cover.png","text":"1. Maven 依赖版本管理1.1 Maven 依赖的优先级1、最短路径优先 工程中依赖了 B、C 两个 jar 包 在 B jar 包内引用了 C jar 包版本为 1.0 在工程内直接引用的 C jar 包版本为 2.0 Project -&gt; B -&gt; C(1....","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"开发实践","slug":"开发实践","count":6,"path":"api/categories/开发实践.json"}],"tags":[{"name":"IDEA","slug":"IDEA","count":8,"path":"api/tags/IDEA.json"},{"name":"微服务","slug":"微服务","count":1,"path":"api/tags/微服务.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},{"title":"Java实用总结","uid":"b3f4e6999373a71edd44de21348d01f5","slug":"BlogRepository/Java/Java实用总结","date":"2022-11-08T02:22:55.000Z","updated":"2023-04-20T13:57:44.601Z","comments":true,"path":"api/articles/BlogRepository/Java/Java实用总结.json","cover":"https://cover.png","text":"1. 时间时区转换1.1 UTC 转 LocalDateTime将 UTC 时间（格林威治实际标准时间）转换为北京时间（UTC-东八区时间）。即将带有 T、Z 的日期字符串类型转为 LocalDateTime 类型。LocalDateTime 是没有时区的 date 时间，如果想...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Java","slug":"Java","count":5,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":12,"path":"api/tags/Java.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},{"title":"Vue3 总结","uid":"253be1f39f8482a0ee0e446a428827b1","slug":"BlogRepository/Vue/Vue3 总结（基础）","date":"2022-11-06T15:57:57.000Z","updated":"2023-04-20T13:57:44.617Z","comments":true,"path":"api/articles/BlogRepository/Vue/Vue3 总结（基础）.json","cover":"https://cover.png","text":"Vue2 基础见：Vue2 总结（基础）_凡 223 的博客 Vue2 开发见：Vue2 总结（开发）_凡 223 的博客 1. 简介 性能的提升 打包大小减少41% 初次渲染快55%，更新渲染快133% 内存减少54%…… 源码的升级 使用Proxy代替defineProper...","link":"","photos":[],"count_time":{"symbolsCount":"42k","symbolsTime":"38 mins."},"categories":[{"name":"Vue","slug":"Vue","count":4,"path":"api/categories/Vue.json"}],"tags":[{"name":"Vue","slug":"Vue","count":5,"path":"api/tags/Vue.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},{"title":"设计模式之美总结（创建型篇）","uid":"b576af472086ff634c008c948f90fb9b","slug":"BlogRepository/设计模式/设计模式之美总结（创建型篇）","date":"2022-11-03T05:58:36.000Z","updated":"2023-04-20T13:57:44.632Z","comments":true,"path":"api/articles/BlogRepository/设计模式/设计模式之美总结（创建型篇）.json","cover":"https://cover.png","text":"前三篇见： 设计模式之美总结（面向对象篇）_凡 223 的博客 设计模式之美总结（设计原则篇）_凡 223 的博客 设计模式之美总结（重构篇）_凡 223 的博客 1. 单例模式（Singleton Design Pattern）1.1 为什么要使用单例？单例设计模式（Singl...","link":"","photos":[],"count_time":{"symbolsCount":"61k","symbolsTime":"55 mins."},"categories":[{"name":"设计模式","slug":"设计模式","count":8,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},{"title":"设计模式之美总结（设计原则篇）","uid":"b2a78a3230e27441fbeed95c211733e9","slug":"BlogRepository/设计模式/设计模式之美总结（设计原则篇）","date":"2022-10-27T09:31:42.000Z","updated":"2023-04-20T13:57:44.648Z","comments":true,"path":"api/articles/BlogRepository/设计模式/设计模式之美总结（设计原则篇）.json","cover":"https://cover.png","text":"上一篇见： 设计模式之美总结（面向对象篇）_凡 223 的博客 上一篇介绍了面向对象相关的知识。接下来介绍一些经典的设计原则，其中包括 SOLID、KISS、YAGNI、DRY、LOD 等 1. 单一职责原则（SRP）1.1 如何理解单一职责原则？实际上，SOLID 原则并非单纯...","link":"","photos":[],"count_time":{"symbolsCount":"100k","symbolsTime":"1:31"},"categories":[{"name":"设计模式","slug":"设计模式","count":8,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false}]}