{"title":"Vue3 总结（开发）","uid":"6c3cfbb59bb90aa0cd86d47a59e86094","slug":"BlogRepository/Vue/Vue3 总结（开发）","date":"2022-12-20T16:57:55.000Z","updated":"2023-03-13T19:13:04.944Z","comments":true,"path":"api/articles/BlogRepository/Vue/Vue3 总结（开发）.json","keywords":null,"cover":"https://cover.png","content":"<p><strong>更详细的 API 和使用见：<a href=\"https://blog.csdn.net/ACE_U_005A/article/details/123789272\">Vue2 总结（开发）_凡 223 的博客</a></strong></p>\n<h1 id=\"1-Vue-Router\"><a href=\"#1-Vue-Router\" class=\"headerlink\" title=\"1. Vue Router\"></a>1. <a href=\"https://router.vuejs.org/zh/\">Vue Router</a></h1><p><strong>官网地址：<a href=\"https://router.vuejs.org/zh/\">Home | Vue Router (vuejs.org)</a></strong></p>\n<h2 id=\"1-1-安装\"><a href=\"#1-1-安装\" class=\"headerlink\" title=\"1.1 安装\"></a>1.1 安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install vue-router@4</code></pre>\n\n<h2 id=\"1-2-使用\"><a href=\"#1-2-使用\" class=\"headerlink\" title=\"1.2 使用\"></a>1.2 使用</h2><h3 id=\"1-2-1-new-Router-变成-createRouter\"><a href=\"#1-2-1-new-Router-变成-createRouter\" class=\"headerlink\" title=\"1.2.1 new Router 变成 createRouter\"></a>1.2.1 new Router 变成 createRouter</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 以前是\n&#x2F;&#x2F; import Router from &#39;vue-router&#39;\nimport &#123; createRouter &#125; from &#39;vue-router&#39;\n\nconst router &#x3D; createRouter(&#123;\n  &#x2F;&#x2F; ...\n&#125;)</code></pre>\n\n<h3 id=\"1-2-2-新的-history-配置取代-mode\"><a href=\"#1-2-2-新的-history-配置取代-mode\" class=\"headerlink\" title=\"1.2.2 新的 history 配置取代 mode\"></a>1.2.2 新的 history 配置取代 mode</h3><p><code>mode: &#39;history&#39;</code> 配置已经被一个更灵活的 <code>history</code> 配置所取代。根据使用的模式，必须用适当的函数替换它：</p>\n<ul>\n<li><code>&quot;history&quot;</code>：<code>createWebHistory()</code></li>\n<li><code>&quot;hash&quot;</code>：<code>createWebHashHistory()</code></li>\n<li><code>&quot;abstract&quot;</code>：<code>createMemoryHistory()</code></li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createRouter, createWebHashHistory &#125; from &#39;vue-router&#39;\n&#x2F;&#x2F; 还有 createWebHashHistory 和 createMemoryHistory\n\ncreateRouter(&#123;\n  history: createWebHashHistory(),\n  routes: [],\n&#125;)</code></pre>\n\n<h3 id=\"1-2-3-index-js-示例\"><a href=\"#1-2-3-index-js-示例\" class=\"headerlink\" title=\"1.2.3 index.js 示例\"></a>1.2.3 index.js 示例</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createRouter, createWebHistory &#125; from &#39;vue-router&#39;\n\nconst router &#x3D; createRouter(&#123;\n  history: createWebHistory(),\n  routes: [\n    &#123;\n      path: &#39;&#x2F;&#39;,\n      redirect: &#39;&#x2F;home&#39;,\n      name: &#39;Root&#39;,\n      component: () &#x3D;&gt; import(&#39;@&#x2F;layout&#x2F;MainMenu.vue&#39;),\n      children: [\n        &#123;\n          path: &#39;&#x2F;home&#39;,\n          name: &#39;Home&#39;,\n          component: () &#x3D;&gt; import(&#39;@&#x2F;views&#x2F;Home.vue&#39;)\n        &#125;\n      ],\n    &#125;,\n    &#123;\n      path: &#39;&#x2F;index&#39;,\n      name: &#39;Index&#39;,\n      component: () &#x3D;&gt; import(&#39;@&#x2F;views&#x2F;Index.vue&#39;),\n    &#125;,\n  ]\n&#125;)\n\nexport default router</code></pre>\n\n<h3 id=\"1-2-4-main-js-里引入\"><a href=\"#1-2-4-main-js-里引入\" class=\"headerlink\" title=\"1.2.4 main.js 里引入\"></a>1.2.4 main.js 里引入</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createApp &#125; from &#39;vue&#39;\nimport App from &#39;.&#x2F;App.vue&#39;\n\nimport router from &#39;.&#x2F;router&#39;\n\nconst app &#x3D; createApp(App)\n\napp.use(router)\n  .mount(&#39;#app&#39;)</code></pre>\n\n<h3 id=\"1-2-5-组合式-API\"><a href=\"#1-2-5-组合式-API\" class=\"headerlink\" title=\"1.2.5 组合式 API\"></a>1.2.5 组合式 API</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;script&gt;\nimport &#123; useRouter, useRoute &#125; from &#39;vue-router&#39;\n\nexport default &#123;\n  &#x2F;&#x2F; eslint-disable-next-line vue&#x2F;multi-word-component-names\n  name: &#39;Login&#39;,\n  setup() &#123;\n    const router &#x3D; useRouter()\n    const route &#x3D; useRoute()\n\n    function pushWithQuery(query) &#123;\n      &#x2F;&#x2F; router.push(&#39;&#x2F;home&#39;);\n      router.push(&#123;\n        name: &#39;Hone&#39;,\n        query: &#123;\n          ...route.query,\n        &#125;,\n      &#125;)\n    &#125;\n\n    return &#123;\n      pushWithQuery,\n    &#125;;\n  &#125;,\n&#125;;\n&lt;&#x2F;script&gt;</code></pre>\n\n<h2 id=\"1-3-导航守卫和动态路由\"><a href=\"#1-3-导航守卫和动态路由\" class=\"headerlink\" title=\"1.3 导航守卫和动态路由\"></a>1.3 导航守卫和动态路由</h2><p>可以在路由前注册一个全局前置守卫来进行动态路由</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 全局前置守卫\nrouter.beforeEach((to, from ,next) &#x3D;&gt; &#123;\n  let hasRoute &#x3D; store.state.menu.hasRoute;\n\n  if (to.path &#x3D;&#x3D;&#x3D; &#39;&#x2F;login&#39;) &#123;\n    next()\n  &#125; else if(!localStorage.getItem(&#39;JWT&#39;)) &#123;\n    ElMessage(&#123;\n      message: &#39;请先登录&#39;,\n      type: &#39;error&#39;\n    &#125;)\n    next(&#39;&#x2F;login&#39;)\n  &#125; else if (!hasRoute)&#123;\n    axios.get(&#39;&#x2F;resNav&#x2F;menu&#x2F;listNavMenus&#39;).then(response &#x3D;&gt; &#123;\n      &#x2F;&#x2F; 拿到 menus 菜单列表\n      store.commit(&#39;SET_MENUS&#39;, response.data.data.menus);\n      &#x2F;&#x2F; 拿到 authorities 权限列表\n      store.commit(&#39;SET_AUTHORITIES&#39;, response.data.data.authorities);\n\n      if(response.data.data.menus) &#123;\n        &#x2F;&#x2F; 动态绑定路由\n        response.data.data.menus.forEach(menu &#x3D;&gt; &#123;\n          if (menu.children &amp;&amp; menu.children.length &gt; 0) &#123;\n            transToRouter(menu)\n          &#125; else &#123;\n            let route &#x3D; menuToRouter(menu);\n            if (route) &#123;\n              router.addRoute(&#39;Root&#39;, route);\n            &#125;\n          &#125;\n        &#125;);\n\n        store.commit(&#39;CHANGE_ROUTE_STATUS&#39;, true);\n      &#125;\n\n      next(to.path)\n    &#125;)\n  &#125; else &#123;\n    next()\n  &#125;\n&#125;)\n\nfunction transToRouter(menu) &#123;\n  if(menu.children &amp;&amp; menu.children.length &gt; 0) &#123;\n    menu.children.forEach(child &#x3D;&gt; &#123;\n      transToRouter(child)\n    &#125;)\n  &#125; else &#123;\n    let route &#x3D; menuToRouter(menu);\n    if (route) &#123;\n      router.addRoute(&#39;Root&#39;, route)\n    &#125;\n  &#125;\n&#125;\n\nfunction menuToRouter(menu) &#123;\n  if(!menu.component)&#123;\n    return null;\n  &#125; else &#123;\n    return &#123;\n      path: menu.path,\n      name: menu.permission,\n      component: () &#x3D;&gt; import(&#39;@&#x2F;views&#39; + menu.component +&#39;.vue&#39;),\n      meta: &#123;\n        title: menu.name,\n        icon: menu.icon\n      &#125;\n    &#125;\n  &#125;\n&#125;\n\nexport default router</code></pre>\n\n<h1 id=\"2-Vuex\"><a href=\"#2-Vuex\" class=\"headerlink\" title=\"2. Vuex\"></a>2. <a href=\"https://vuex.vuejs.org/zh/\">Vuex</a></h1><p><strong>官网地址：<a href=\"https://vuex.vuejs.org/zh/\">Vuex 是什么？ | Vuex (vuejs.org)</a></strong></p>\n<h2 id=\"2-1-安装\"><a href=\"#2-1-安装\" class=\"headerlink\" title=\"2.1 安装\"></a>2.1 安装</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm install vuex@next --save</code></pre>\n\n<h2 id=\"2-2-使用\"><a href=\"#2-2-使用\" class=\"headerlink\" title=\"2.2 使用\"></a>2.2 使用</h2><h3 id=\"2-2-1-new-Vuex-Store-变成-createStore\"><a href=\"#2-2-1-new-Vuex-Store-变成-createStore\" class=\"headerlink\" title=\"2.2.1 new Vuex.Store 变成 createStore\"></a>2.2.1 new Vuex.Store 变成 createStore</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createStore &#125; from &#39;vuex&#39;\n\nexport const store &#x3D; createStore(&#123;\n  state () &#123;\n    return &#123;\n      count: 1\n    &#125;\n  &#125;\n&#125;)</code></pre>\n\n<h3 id=\"2-2-2-index-js-示例\"><a href=\"#2-2-2-index-js-示例\" class=\"headerlink\" title=\"2.2.2 index.js 示例\"></a>2.2.2 index.js 示例</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createStore &#125; from &#39;vuex&#39;\n\nconst store &#x3D; createStore(&#123;\n  state: &#123;\n    isCollapsed: false\n  &#125;\n&#125;)\n\nexport default store</code></pre>\n\n<h3 id=\"2-2-3-main-js-里引入\"><a href=\"#2-2-3-main-js-里引入\" class=\"headerlink\" title=\"2.2.3 main.js 里引入\"></a>2.2.3 main.js 里引入</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createApp &#125; from &#39;vue&#39;\nimport App from &#39;.&#x2F;App.vue&#39;\n\nimport router from &#39;.&#x2F;router&#39;\nimport store from &#39;.&#x2F;store&#39;\n\nconst app &#x3D; createApp(App)\n\napp.use(router)\n  .use(store)\n  .mount(&#39;#app&#39;)</code></pre>\n\n<h3 id=\"2-2-4-组合式-API-中使用-store\"><a href=\"#2-2-4-组合式-API-中使用-store\" class=\"headerlink\" title=\"2.2.4 组合式 API 中使用 store\"></a>2.2.4 组合式 API 中使用 store</h3><p>可以通过调用 <code>useStore</code> 函数，来在 <code>setup</code> 钩子函数中访问 store。这与在组件中使用选项式 API 访问 <code>this.$store</code> 是等效的</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; useStore &#125; from &#39;vuex&#39;\n\nexport default &#123;\n  setup () &#123;\n    const store &#x3D; useStore()\n  &#125;\n&#125;</code></pre>\n\n<p><strong>访问 State</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;script&gt;\nimport &#123; useStore &#125; from &#39;vuex&#39;\n\nexport default &#123;\n  name: &#39;HeaderMenu&#39;,\n  setup() &#123;\n    const store &#x3D; useStore()\n\n    function collapsedSider() &#123;\n      store.state.isCollapsed &#x3D; !store.state.isCollapsed\n    &#125;\n\n    return &#123;\n      collapsedSider\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<p>同上，访问 Getter、Mutation 和 Action 类似</p>\n<h1 id=\"3-View-UI-Plus\"><a href=\"#3-View-UI-Plus\" class=\"headerlink\" title=\"3. View UI Plus\"></a>3. <a href=\"https://www.iviewui.com/view-ui-plus/guide/introduce\">View UI Plus</a></h1><p><strong>官网地址：<a href=\"https://www.iviewui.com/view-ui-plus/guide/introduce\">View Design (iviewui.com)</a></strong></p>\n<h2 id=\"3-1-安装\"><a href=\"#3-1-安装\" class=\"headerlink\" title=\"3.1 安装\"></a>3.1 安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install view-ui-plus --save</code></pre>\n\n<h2 id=\"3-2-main-js-里引入\"><a href=\"#3-2-main-js-里引入\" class=\"headerlink\" title=\"3.2 main.js 里引入\"></a>3.2 main.js 里引入</h2><h3 id=\"3-2-1-完整引入\"><a href=\"#3-2-1-完整引入\" class=\"headerlink\" title=\"3.2.1 完整引入\"></a>3.2.1 完整引入</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createApp &#125; from &#39;vue&#39;\nimport App from &#39;.&#x2F;App.vue&#39;\n\nimport ViewUIPlus from &#39;view-ui-plus&#39;\nimport &#39;view-ui-plus&#x2F;dist&#x2F;styles&#x2F;viewuiplus.css&#39;\n\nconst app &#x3D; createApp(App)\n\napp.use(ViewUIPlus)\n  .mount(&#39;#app&#39;)</code></pre>\n\n<h3 id=\"3-2-2-按需引入\"><a href=\"#3-2-2-按需引入\" class=\"headerlink\" title=\"3.2.2 按需引入\"></a>3.2.2 按需引入</h3><p>助插件 <a href=\"https://github.com/umijs/babel-plugin-import\">babel-plugin-import</a> 可以实现按需加载组件，减少文件体积</p>\n<p>1、安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install babel-plugin-import --save-dev</code></pre>\n\n<p>2、在文件 babel.config.js 里配置</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module.exports &#x3D; &#123;\n  presets: [\n    &#39;@vue&#x2F;cli-plugin-babel&#x2F;preset&#39;\n  ],\n  plugins: [\n    [\n      &quot;import&quot;,\n      &#123;\n        &quot;libraryName&quot;: &quot;view-ui-plus&quot;,\n        &quot;libraryDirectory&quot;: &quot;src&#x2F;components&quot;\n      &#125;,\n      &quot;view-ui-plus&quot;\n    ]\n  ]\n&#125;</code></pre>\n\n<p>3、再进行引入</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createApp &#125; from &#39;vue&#39;\nimport App from &#39;.&#x2F;App.vue&#39;\n\nimport &#123; Button, Table &#125; from &#39;view-ui-plus&#39;;\nimport &#39;view-ui-plus&#x2F;dist&#x2F;styles&#x2F;viewuiplus.css&#39;;\n\nconst app &#x3D; createApp(App)\n\napp.component(&#39;Button&#39;, Button);\napp.component(&#39;Table&#39;, Table);\n\napp.mount(&#39;#app&#39;)</code></pre>\n\n<h2 id=\"3-3-使用\"><a href=\"#3-3-使用\" class=\"headerlink\" title=\"3.3 使用\"></a>3.3 使用</h2><p>按照官方文档使用相关组件即可：<a href=\"https://www.iviewui.com/view-ui-plus/component/layout/layout\">View Design (iviewui.com)</a></p>\n<h1 id=\"4-Element-Plus\"><a href=\"#4-Element-Plus\" class=\"headerlink\" title=\"4. Element Plus\"></a>4. <a href=\"https://element-plus.org/zh-CN/\">Element Plus</a></h1><p><strong>官网地址：<a href=\"https://element-plus.org/zh-CN/\">Element Plus (element-plus.org)</a></strong></p>\n<h2 id=\"4-1-安装\"><a href=\"#4-1-安装\" class=\"headerlink\" title=\"4.1 安装\"></a>4.1 安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install element-plus --save</code></pre>\n\n<h2 id=\"4-2-main-js-里引入\"><a href=\"#4-2-main-js-里引入\" class=\"headerlink\" title=\"4.2 main.js 里引入\"></a>4.2 main.js 里引入</h2><h3 id=\"4-2-1-完整引入\"><a href=\"#4-2-1-完整引入\" class=\"headerlink\" title=\"4.2.1 完整引入\"></a>4.2.1 完整引入</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createApp &#125; from &#39;vue&#39;\nimport App from &#39;.&#x2F;App.vue&#39;\n\nimport ElementPlus from &#39;element-plus&#39;\nimport &#39;element-plus&#x2F;dist&#x2F;index.css&#39;\n\nconst app &#x3D; createApp(App)\n\napp.use(ElementPlus)\napp.mount(&#39;#app&#39;)</code></pre>\n\n<h3 id=\"4-2-2-按需引入\"><a href=\"#4-2-2-按需引入\" class=\"headerlink\" title=\"4.2.2 按需引入\"></a>4.2.2 按需引入</h3><p><strong>自动导入</strong></p>\n<p>1、安装 <code>unplugin-vue-components</code> 和 <code>unplugin-auto-import</code> 这两款插件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install -D unplugin-vue-components unplugin-auto-import</code></pre>\n\n<p>2、在 <code>Webpack</code> 的配置文件里配置</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const AutoImport &#x3D; require(&#39;unplugin-auto-import&#x2F;webpack&#39;)\nconst Components &#x3D; require(&#39;unplugin-vue-components&#x2F;webpack&#39;)\nconst &#123; ElementPlusResolver &#125; &#x3D; require(&#39;unplugin-vue-components&#x2F;resolvers&#39;)\n\nmodule.exports &#x3D; &#123;\n  &#x2F;&#x2F; ...\n  plugins: [\n    AutoImport(&#123;\n      resolvers: [ElementPlusResolver()],\n    &#125;),\n    Components(&#123;\n      resolvers: [ElementPlusResolver()],\n    &#125;),\n  ],\n&#125;</code></pre>\n\n<p><strong>手动导入</strong></p>\n<p>1、安装 <a href=\"https://github.com/element-plus/unplugin-element-plus\">unplugin-element-plus</a> 来导入样式，参考 <a href=\"https://github.com/element-plus/unplugin-element-plus#readme\">文档</a> 进行配置</p>\n<p>2、使用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;template&gt;\n  &lt;el-button&gt;I am ElButton&lt;&#x2F;el-button&gt;\n&lt;&#x2F;template&gt;\n&lt;script&gt;\n  import &#123; ElButton &#125; from &#39;element-plus&#39;\n  export default &#123;\n    components: &#123; ElButton &#125;,\n  &#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<h2 id=\"4-3-使用\"><a href=\"#4-3-使用\" class=\"headerlink\" title=\"4.3 使用\"></a>4.3 使用</h2><p><strong>按照官方文档使用相关组件即可：<a href=\"https://element-plus.org/zh-CN/component/container.html\">Element Plus</a></strong></p>\n<h3 id=\"4-3-1-图标使用\"><a href=\"#4-3-1-图标使用\" class=\"headerlink\" title=\"4.3.1 图标使用\"></a>4.3.1 图标使用</h3><p><strong>1、安装</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install @element-plus&#x2F;icons-vue</code></pre>\n\n<p><strong>2、main.js 里注册所有图标</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import * as ElementPlusIconsVue from &#39;@element-plus&#x2F;icons-vue&#39;\n\nconst app &#x3D; createApp(App)\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) &#123;\n  app.component(key, component)\n&#125;</code></pre>\n\n<p><strong>3、组件中配合 Button 使用</strong></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;el-button :icon&#x3D;&quot;Fold&quot;&gt; &lt;&#x2F;el-button&gt;\n  &lt;el-button :icon&#x3D;&quot;Expand&quot;&gt; &lt;&#x2F;el-button&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nimport &#123; Fold, Expand &#125; from &#39;@element-plus&#x2F;icons-vue&#39;\n\nexport default &#123;\n  name: &#39;HeaderMenu&#39;,\n  setup() &#123;\n    return &#123;\n      Fold,\n      Expand\n    &#125;\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<h3 id=\"4-3-2-消息提示使用\"><a href=\"#4-3-2-消息提示使用\" class=\"headerlink\" title=\"4.3.2 消息提示使用\"></a>4.3.2 消息提示使用</h3><p><strong>1、全局方法</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;script&gt;\nimport &#123; getCurrentInstance &#125; from &quot;@vue&#x2F;runtime-core&quot;;\n\nexport default &#123;\n  &#x2F;&#x2F; eslint-disable-next-line vue&#x2F;multi-word-component-names\n  name: &#39;Login&#39;,\n  setup() &#123;\n    const &#123; proxy &#125; &#x3D; getCurrentInstance()\n\n    proxy.$message(&#123;\n      message: &#39;&#39;,\n      type: &#39;success&#39;,\n    &#125;)\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<p><strong>2、单独引用</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; ElMessage &#125; from &#39;element-plus&#39;</code></pre>\n\n<p><strong>3、全局注入</strong></p>\n<p>main.js</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; ElMessage &#125; from &#39;element-plus&#39;\n\napp.provide(&#39;ElMessage&#39;, ElMessage)</code></pre>\n\n<p>组件使用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;script&gt;\nimport &#123; inject &#125; from &quot;@vue&#x2F;runtime-core&quot;;\n\nexport default &#123;\n  &#x2F;&#x2F; eslint-disable-next-line vue&#x2F;multi-word-component-names\n  name: &#39;Login&#39;,\n  setup() &#123;\n    const ElMessage &#x3D; inject(&#39;ElMessage&#39;)\n\n    ElMessage(&#123;\n      message: &#39;&#39;,\n      type: &#39;success&#39;,\n    &#125;)\n  &#125;\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<h1 id=\"5-Vue-Axios\"><a href=\"#5-Vue-Axios\" class=\"headerlink\" title=\"5. Vue-Axios\"></a>5. Vue-Axios</h1><p><strong>官网地址：<a href=\"http://www.axios-js.com/zh-cn/docs/\">axios 中文文档 (axios-js.com)</a></strong></p>\n<h2 id=\"5-1-安装\"><a href=\"#5-1-安装\" class=\"headerlink\" title=\"5.1 安装\"></a>5.1 安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install --save axios vue-axios</code></pre>\n\n<h2 id=\"5-2-main-js-里引入\"><a href=\"#5-2-main-js-里引入\" class=\"headerlink\" title=\"5.2 main.js 里引入\"></a>5.2 main.js 里引入</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createApp &#125; from &#39;vue&#39;\nimport App from &#39;.&#x2F;App.vue&#39;\n\nimport axios from &#39;axios&#39;\nimport VueAxios from &#39;vue-axios&#39;\n\nconst app &#x3D; createApp(App)\n\napp.use(VueAxios, axios)\n  .mount(&#39;#app&#39;)</code></pre>\n\n<h2 id=\"5-3-使用\"><a href=\"#5-3-使用\" class=\"headerlink\" title=\"5.3 使用\"></a>5.3 使用</h2><p><strong>1、使用 app.provide</strong></p>\n<p>main.js 里添加一条配置</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createApp &#125; from &#39;vue&#39;\nimport App from &#39;.&#x2F;App.vue&#39;\n\nimport axios from &#39;axios&#39;\nimport VueAxios from &#39;vue-axios&#39;\n\nconst app &#x3D; createApp(App)\n\napp.use(VueAxios, axios)\n  .mount(&#39;#app&#39;)\n\napp.provide(&#39;axios&#39;, app.config.globalProperties.axios)</code></pre>\n\n<p>在组件中使用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;script&gt;\nimport &#123; inject &#125; from &#39;@vue&#x2F;runtime-core&#39;;\n\nexport default &#123;\n  name: &#39;AsideMenu&#39;,\n  setup() &#123;\n    const axios &#x3D; inject(&#39;axios&#39;)\n\n    function listMenu() &#123;\n      axios.get(&#39;&#x2F;resNav&#x2F;menu&#x2F;listMenu&#39;).then(\n        response &#x3D;&gt; &#123;\n          console.log(response.data.data.records);\n        &#125;\n      )\n    &#125;\n\n    listMenu();\n  &#125;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<p><strong>2、使用 app.config.globalProperties</strong></p>\n<p>main.js 里添加一条配置</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createApp &#125; from &#39;vue&#39;\nimport App from &#39;.&#x2F;App.vue&#39;\n\nimport axios from &#39;axios&#39;\nimport VueAxios from &#39;vue-axios&#39;\n\nconst app &#x3D; createApp(App)\n\napp.use(VueAxios, axios)\n  .mount(&#39;#app&#39;)\n\napp.config.globalProperties.$axios &#x3D; axios;</code></pre>\n\n<p>在组件中使用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;script&gt;\nimport &#123; getCurrentInstance &#125; from &#39;@vue&#x2F;runtime-core&#39;;\n\nexport default &#123;\n  name: &#39;AsideMenu&#39;,\n  setup() &#123;\n    const &#123; proxy &#125; &#x3D; getCurrentInstance();\n\n    function listMenu() &#123;\n      proxy.axios.get(&#39;&#x2F;resNav&#x2F;menu&#x2F;listMenu&#39;).then(\n        response &#x3D;&gt; &#123;\n          console.log(response.data.data.records);\n        &#125;\n      )\n    &#125;\n\n    listMenu();\n  &#125;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<h2 id=\"5-4-全局拦截器\"><a href=\"#5-4-全局拦截器\" class=\"headerlink\" title=\"5.4 全局拦截器\"></a>5.4 全局拦截器</h2><p>创建 axios.js 文件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import axios from &#39;axios&#39;;\nimport &#123; ElMessage &#125; from &#39;element-plus&#39;\nimport router from &#39;@&#x2F;router&#39;\nimport ViewUIPlus from &#39;view-ui-plus&#39;;\n\nconst request &#x3D; axios.create(&#123;\n  timeout: 10000,\n  headers: &#123;\n    &#39;Content-Type&#39;: &#39;application&#x2F;json&#39;,\n  &#125;,\n&#125;);\n\nrequest.interceptors.request.use(config &#x3D;&gt; &#123;\n  if (localStorage.getItem(&quot;JWT&quot;)) &#123;\n    &#x2F;&#x2F; 请求头带上 JWT\n    config.headers.Authorization &#x3D; localStorage.getItem(&quot;JWT&quot;);\n  &#125;\n\n  return config;\n&#125;);\n\nrequest.interceptors.response.use(response &#x3D;&gt; &#123;\n  return response;\n&#125;, error &#x3D;&gt; &#123;\n  ViewUIPlus.LoadingBar.error()\n  \n  if (error.response) &#123;\n    switch (error.response.status) &#123;\n      case 400: \n        ElMessage(&#123;\n          message: &#39;请求错误&#39;,\n          type: &#39;error&#39;\n        &#125;)\n        break;\n      case 401:\n        router.push(&#39;&#x2F;login&#39;);\n        ElMessage(&#123;\n          message: &#39;登录已过期, 请重新登录&#39;,\n          type: &#39;error&#39;\n        &#125;)\n        break;\n      case 403:\n        ElMessage(&#123;\n          message: error.response.data.msg,\n          type: &#39;error&#39;\n        &#125;)\n        break;\n      case 404:\n        ElMessage(&#123;\n          message: &#39;请求错误,未找到该资源&#39;,\n          type: &#39;error&#39;\n        &#125;)\n        break;\n      case 500:\n        ElMessage(&#123;\n          message: &#39;服务器出错&#39;,\n          type: &#39;error&#39;\n        &#125;)\n        break;\n      default:\n        ElMessage(&#123;\n          message: &#39;未知错误&#39;,\n          type: &#39;error&#39;\n        &#125;)\n    &#125;\n  &#125;\n\n  return Promise.reject(error);\n&#125;);\n\nexport default request\n</code></pre>\n\n<p>在 main.js 文件中替换引入</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import request from &#39;.&#x2F;axios&#39;\nimport VueAxios from &#39;vue-axios&#39;\n\napp.use(VueAxios, request)\n  .mount(&#39;#app&#39;)</code></pre>\n","feature":false,"text":"更详细的 API 和使用见：Vue2 总结（开发）_凡 223 的博客 1. Vue Router官网地址：Home | Vue Router (vuejs.org) 1.1 安装npm install vue-router@4 1.2 使用1.2.1 new Router 变成...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"Vue","slug":"Vue","count":4,"path":"api/categories/Vue.json"}],"tags":[{"name":"Vue","slug":"Vue","count":5,"path":"api/tags/Vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-Vue-Router\"><span class=\"toc-text\">1. Vue Router</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">1.1 安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">1.2 使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-1-new-Router-%E5%8F%98%E6%88%90-createRouter\"><span class=\"toc-text\">1.2.1 new Router 变成 createRouter</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-2-%E6%96%B0%E7%9A%84-history-%E9%85%8D%E7%BD%AE%E5%8F%96%E4%BB%A3-mode\"><span class=\"toc-text\">1.2.2 新的 history 配置取代 mode</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-3-index-js-%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">1.2.3 index.js 示例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-4-main-js-%E9%87%8C%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">1.2.4 main.js 里引入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-5-%E7%BB%84%E5%90%88%E5%BC%8F-API\"><span class=\"toc-text\">1.2.5 组合式 API</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-3-%E5%AF%BC%E8%88%AA%E5%AE%88%E5%8D%AB%E5%92%8C%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1\"><span class=\"toc-text\">1.3 导航守卫和动态路由</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-Vuex\"><span class=\"toc-text\">2. Vuex</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">2.1 安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">2.2 使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-1-new-Vuex-Store-%E5%8F%98%E6%88%90-createStore\"><span class=\"toc-text\">2.2.1 new Vuex.Store 变成 createStore</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-2-index-js-%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">2.2.2 index.js 示例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-3-main-js-%E9%87%8C%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">2.2.3 main.js 里引入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-4-%E7%BB%84%E5%90%88%E5%BC%8F-API-%E4%B8%AD%E4%BD%BF%E7%94%A8-store\"><span class=\"toc-text\">2.2.4 组合式 API 中使用 store</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-View-UI-Plus\"><span class=\"toc-text\">3. View UI Plus</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">3.1 安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-main-js-%E9%87%8C%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">3.2 main.js 里引入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-1-%E5%AE%8C%E6%95%B4%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">3.2.1 完整引入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-2-%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">3.2.2 按需引入</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">3.3 使用</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-Element-Plus\"><span class=\"toc-text\">4. Element Plus</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">4.1 安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-main-js-%E9%87%8C%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">4.2 main.js 里引入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-1-%E5%AE%8C%E6%95%B4%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">4.2.1 完整引入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-2-%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">4.2.2 按需引入</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-3-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">4.3 使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-1-%E5%9B%BE%E6%A0%87%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">4.3.1 图标使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-2-%E6%B6%88%E6%81%AF%E6%8F%90%E7%A4%BA%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">4.3.2 消息提示使用</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-Vue-Axios\"><span class=\"toc-text\">5. Vue-Axios</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-1-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">5.1 安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-2-main-js-%E9%87%8C%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">5.2 main.js 里引入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-3-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">5.3 使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-4-%E5%85%A8%E5%B1%80%E6%8B%A6%E6%88%AA%E5%99%A8\"><span class=\"toc-text\">5.4 全局拦截器</span></a></li></ol></li></ol>","author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"mapped":true,"prev_post":{"title":"设计模式之美总结（结构型篇）","uid":"dc36ba1463e60735e3396234d94e7099","slug":"BlogRepository/设计模式/设计模式之美总结（结构型篇）","date":"2022-12-21T01:59:11.000Z","updated":"2023-03-13T19:13:04.964Z","comments":true,"path":"api/articles/BlogRepository/设计模式/设计模式之美总结（结构型篇）.json","keywords":null,"cover":"https://cover.png","text":"前四篇见： 设计模式之美总结（面向对象篇）_凡 223 的博客 设计模式之美总结（设计原则篇）_凡 223 的博客 设计模式之美总结（重构篇）_凡 223 的博客 设计模式之美总结（创建型篇）_凡 223 的博客 1. 代理模式（Proxy Design Pattern）1.1 ...","link":"","photos":[],"count_time":{"symbolsCount":"61k","symbolsTime":"55 mins."},"categories":[{"name":"设计模式","slug":"设计模式","count":8,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":8,"path":"api/tags/设计模式.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},"next_post":{"title":"通过 Request 请求获取真实 IP 地址以及对应省份城市和系统浏览器信息","uid":"ac0a19fc42d1d09f368f9cb237bd1e7b","slug":"BlogRepository/开发实践/通过 Request 请求获取真实 IP 地址以及对应省份城市","date":"2022-12-16T08:20:26.000Z","updated":"2023-03-13T19:13:04.948Z","comments":true,"path":"api/articles/BlogRepository/开发实践/通过 Request 请求获取真实 IP 地址以及对应省份城市.json","keywords":null,"cover":"https://cover.png","text":"1. 获取真实 IP 地址1.1 代码代码如下，这里的 CommonUtil.isBlank() 为封装的判空方法 public static String getIpAddress(HttpServletRequest request) &#123; &#x2F;&#x2F; ...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"开发实践","slug":"开发实践","count":5,"path":"api/categories/开发实践.json"}],"tags":[{"name":"GeoIP2","slug":"GeoIP2","count":1,"path":"api/tags/GeoIP2.json"},{"name":"UserAgentUtils","slug":"UserAgentUtils","count":1,"path":"api/tags/UserAgentUtils.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false}}