{"title":"Git 总结","uid":"bd0b4d58af50c3051be665f36056fa92","slug":"BlogRepository/开发工具及环境/Git 总结","date":"2022-01-26T15:54:45.000Z","updated":"2023-04-20T13:57:44.632Z","comments":true,"path":"api/articles/BlogRepository/开发工具及环境/Git 总结.json","keywords":null,"cover":"https://cover.png","content":"<h1 id=\"1-下载\"><a href=\"#1-下载\" class=\"headerlink\" title=\"1. 下载\"></a>1. <a href=\"https://git-scm.com/downloads\">下载</a></h1><p>点击<a href=\"https://git-scm.com/downloads\">https://git-scm.com/downloads</a>，前往下载页面</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230419205828.png\"></p>\n<p>这里选择 Windows，选择对应的位数下载</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230419205845.png\"></p>\n<h1 id=\"2-安装\"><a href=\"#2-安装\" class=\"headerlink\" title=\"2. 安装\"></a>2. 安装</h1><p>选择安装组件，Next</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230419205910.png\"></p>\n<p>Next</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230419205923.png\"></p>\n<p>选择在 Git 中使用的编辑器，按自己选择，Next</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230419205935.png\"></p>\n<p>或者选择自定义编辑器</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230419205947.png\"></p>\n<p>选择 Git init 命令后分支的初始命名，默认为 master</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230419205959.png\"></p>\n<p>可以选择自定义，目前 GitHub 默认的分支为 main，Next</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230419210014.png\"></p>\n<p>修改系统的环境变量，这里我选择第二个，Next</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230419210024.png\"></p>\n<p>选择 SSH，默认，Next</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230419210039.png\"></p>\n<p>选择 SSL 证书，默认，Next</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083320.png\"></p>\n<p>配置行尾结束符，默认，Next</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083332.png\"></p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083342.png\"></p>\n<p>选择想在 Git Bash 中使用哪个终端模拟器，默认或选择 Windows 默认，Next</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083353.png\"></p>\n<p>pull 时的默认行为，默认选择 Merge，合并分支，Next</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083403.png\"></p>\n<p>选择凭证助手，默认，Next</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083412.png\"></p>\n<p>额外选项，默认，Next</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083422.png\"></p>\n<p>默认不选，Install，进行安装</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083433.png\"></p>\n<p>安装完成</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083444.png\"></p>\n<h1 id=\"3-查看配置信息\"><a href=\"#3-查看配置信息\" class=\"headerlink\" title=\"3.  查看配置信息\"></a>3.  查看配置信息</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">git config --list  查看所有配置项信息\ngit config user.name  查看用户名\ngit config user.email 查看email</code></pre>\n\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083454.png\"></p>\n<h1 id=\"4-设置用户信息\"><a href=\"#4-设置用户信息\" class=\"headerlink\" title=\"4. 设置用户信息\"></a>4. 设置用户信息</h1><p>每次Git提交都会使用该用户信息</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git config --global user.name &quot;Fan223&quot;    设置用户名\ngit config --global user.email &quot;fanj.zh@foxmail.com&quot;  设置邮箱</code></pre>\n\n<h1 id=\"5-SSH设置\"><a href=\"#5-SSH设置\" class=\"headerlink\" title=\"5. SSH设置\"></a>5. SSH设置</h1><h2 id=\"5-1-生成密钥对\"><a href=\"#5-1-生成密钥对\" class=\"headerlink\" title=\"5.1 生成密钥对\"></a>5.1 生成密钥对</h2><p>Git 服务器选择使用 SSH 公钥来进行授权。系统中的每个用户都必须提供一个公钥用于授权，没有的话就要生成一个。生成公钥的过程在所有操作系统上都差不多。首先你要确认一下本机是否已经有一个公钥</p>\n<p>SSH公钥默认存储在账户的主目录下的 .ssh 目录</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083512.png\"></p>\n<p>看是否存在id_rsa和id_rsa.pub(或者是id_dsa和id_dsa.pub之类成对的文件)，有 .pub 后缀的文件就是公钥，另一个文件则是密钥</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083528.png\"></p>\n<p>假如没有这些文件，甚至连 .ssh 目录都没有，可以用 ssh-keygen 来创建。该程序在 Linux&#x2F;Mac 系统上由 SSH 包提供，而在 Windows 上则包含在 MSysGit 包里：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh-keygen -t rsa -C &quot;fanj.zh@foxmail.com&quot; \n私钥以BEGIN OPENSSH PRIVATE KEY开头，以END OPENSSH PRIVATE KEY结尾，Git 可以正常使用，在SpringCloud的配置中心从GitHub上读取配置时，使用该种类型会报错\n使用\nssh-keygen -m PEM -t rsa -b 4096 -C &quot;fanj.zh@foxmail.com&quot; \n私钥以BEGIN RSA PRIVATE KEY开头，以END RSA PRIVATE KEY结尾，在SpringCloud的配置中心从GitHub上读取配置时，使用该种类型可以成功</code></pre>\n\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083543.png\"></p>\n<p>直接按 Enter 确定，会提示输入密码，可以不输，也可以输，假如输入后，每次进行操作时都将提示：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Enter passphrase for key &#39;&#x2F;c&#x2F;Users&#x2F;Fan&#x2F;.ssh&#x2F;id_rsa&#39;:</code></pre>\n\n<p>需要输入密码才能操作</p>\n<p>假如设置了密码可以通过：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh-keygen -p  重新设置密码，直接回车设置为空</code></pre>\n\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083604.png\"></p>\n<p>完成密码设置之后，密钥对生成完成</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083617.png\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;Fan&#x2F;.ssh&#x2F;id_rsa  密钥存放在id_rsa\nYour public key has been saved in &#x2F;c&#x2F;Users&#x2F;Fan&#x2F;.ssh&#x2F;id_rsa.pub  公钥存放在id_rsa.pub</code></pre>\n\n<h2 id=\"5-2-添加公钥到远程仓库（GitHub、Gitee）\"><a href=\"#5-2-添加公钥到远程仓库（GitHub、Gitee）\" class=\"headerlink\" title=\"5.2 添加公钥到远程仓库（GitHub、Gitee）\"></a>5.2 添加公钥到远程仓库（GitHub、Gitee）</h2><p>1、查看生成的公钥</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cat .ssh&#x2F;id_rsa.pub</code></pre>\n\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083629.png\"></p>\n<p>2、登录GitHub账号，进入设置</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083641.png\"></p>\n<p>3、添加公钥</p>\n<p>复制上面的公钥内容，粘贴进 Key 里，Title 定义一个名字</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083658.png\"></p>\n<p>4、测试是否正常工作</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh -T git@github.com</code></pre>\n\n<p>看到</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Hi Fan223! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></pre>\n\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083712.png\"></p>\n<p>即设置成功</p>\n<h1 id=\"6-常用命令\"><a href=\"#6-常用命令\" class=\"headerlink\" title=\"6. 常用命令\"></a>6. 常用命令</h1><p>1、拉取（可以使用 SSH 公钥或 HTTPS）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git clone git@github.com:Fan223&#x2F;SpringCloud-Config.git</code></pre>\n\n<p>2、添加</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git add .</code></pre>\n\n<p>3、提交</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git commit -m &quot;Initial commit&quot;</code></pre>\n\n<p>4、设置远端仓库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git remote add origin &lt;远程仓库url&gt;</code></pre>\n\n<p>5、推送（-f 表示强推，可选）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git push\ngit push [-f] --set-upstream origin master</code></pre>\n\n<p>6、初始化 Git，即生成 .git 文件夹</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git init</code></pre>\n\n<h1 id=\"7-IDEA使用Git\"><a href=\"#7-IDEA使用Git\" class=\"headerlink\" title=\"7. IDEA使用Git\"></a>7. IDEA使用Git</h1><h2 id=\"7-1-配置-Git\"><a href=\"#7-1-配置-Git\" class=\"headerlink\" title=\"7.1 配置 Git\"></a>7.1 配置 Git</h2><p><img src=\"http://img.fan223.cn/2023/04/20230420083728.png\"></p>\n<h2 id=\"7-2-创建本地仓库\"><a href=\"#7-2-创建本地仓库\" class=\"headerlink\" title=\"7.2 创建本地仓库\"></a>7.2 创建本地仓库</h2><p>创建一个新项目，点击 VCS，然后点击 Create Git Repository</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083737.png\"></p>\n<p>选择项目目录</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083751.png\"></p>\n<p>项目目录下会出现一个隐藏的 .git 文件夹</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083806.png\"></p>\n<p>同时在项目里右键会出现 Git 选项，菜单栏右上角也会出现 Git 的操作选项</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083820.png\"></p>\n<p>或者我们创建好远程仓库，直接复制远程仓库的地址，把项目 Clone 下来</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083834.png\"></p>\n<h2 id=\"7-3-提交代码到远程仓库\"><a href=\"#7-3-提交代码到远程仓库\" class=\"headerlink\" title=\"7.3 提交代码到远程仓库\"></a>7.3 提交代码到远程仓库</h2><p>新建一个 Class 类，会提示是否把文件加到 Git，勾选 Don’t ask again 不再询问，然后点击 Add，添加</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083848.png\"></p>\n<p>点击菜单栏的 Git 操作选项，Commit</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083902.png\"></p>\n<p>填写 Commit Message，然后点击 Commit</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083920.png\"></p>\n<p>提示 Code Analysis 代码分析，这个文件没有错误但有5个警告，是否要回看代码，选择 Commit 提交</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083938.png\"></p>\n<p>点击 Commit 提交</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420083953.png\"></p>\n<p>点击菜单栏的 Git 操作选项，Push</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420084005.png\"></p>\n<p>第一次提交，需要指定远程仓库的地址</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420084024.png\"></p>\n<p>输入远程仓库地址，点击 OK</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420084036.png\"></p>\n<p>可以看到我们提交的记录，点击 Push</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420084047.png\"></p>\n<p>可以在远程仓库看到我们 Push 的内容，Push 成功</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420084057.png\"></p>\n<p>可以在 Commit 操作时直接点击 Commit and Push，提交完会自动打开 Push 页面，不需要再手动点击 Push</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420084115.png\"></p>\n<h2 id=\"7-4-从远程仓库获取更新\"><a href=\"#7-4-从远程仓库获取更新\" class=\"headerlink\" title=\"7.4 从远程仓库获取更新\"></a>7.4 从远程仓库获取更新</h2><p>点击菜单栏的 Git 操作选项，Update Project 更新项目</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420084129.png\"></p>\n<p>Merge the incoming changes into the current branch：将传入的更改合并到当前分支中<br>Rebase the current branch on top of the incoming changes：在传入更改的基础上重新建立当前分支<br>选择合并分支，点击 OK</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420084148.png\"></p>\n<p>项目内容进行了更新</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420084202.png\"></p>\n<h2 id=\"7-5-回滚操作\"><a href=\"#7-5-回滚操作\" class=\"headerlink\" title=\"7.5 回滚操作\"></a>7.5 回滚操作</h2><p>点击菜单栏的 Git 操作选项，Rollback 回滚操作</p>\n<p><img src=\"http://img.fan223.cn/2023/04/20230420084214.png\"></p>\n","feature":false,"text":"1. 下载点击https://git-scm.com/downloads，前往下载页面 这里选择 Windows，选择对应的位数下载 2. 安装选择安装组件，Next Next 选择在 Git 中使用的编辑器，按自己选择，Next 或者选择自定义编辑器 选择 Git init 命...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"开发技术及框架","slug":"开发技术及框架","count":9,"path":"api/categories/开发技术及框架.json"}],"tags":[{"name":"Git","slug":"Git","count":1,"path":"api/tags/Git.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">1. 下载</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">2. 安装</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E6%9F%A5%E7%9C%8B%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">3.  查看配置信息</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">4. 设置用户信息</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-SSH%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">5. SSH设置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-1-%E7%94%9F%E6%88%90%E5%AF%86%E9%92%A5%E5%AF%B9\"><span class=\"toc-text\">5.1 生成密钥对</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-2-%E6%B7%BB%E5%8A%A0%E5%85%AC%E9%92%A5%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%EF%BC%88GitHub%E3%80%81Gitee%EF%BC%89\"><span class=\"toc-text\">5.2 添加公钥到远程仓库（GitHub、Gitee）</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">6. 常用命令</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#7-IDEA%E4%BD%BF%E7%94%A8Git\"><span class=\"toc-text\">7. IDEA使用Git</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-1-%E9%85%8D%E7%BD%AE-Git\"><span class=\"toc-text\">7.1 配置 Git</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-2-%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">7.2 创建本地仓库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-3-%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">7.3 提交代码到远程仓库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-4-%E4%BB%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E8%8E%B7%E5%8F%96%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">7.4 从远程仓库获取更新</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-5-%E5%9B%9E%E6%BB%9A%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">7.5 回滚操作</span></a></li></ol></li></ol>","author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"mapped":true,"prev_post":{"title":"服务器 Nacos 集群搭建及使用总结","uid":"77e6eaf05689d833633a4c139786f8ac","slug":"BlogRepository/服务器/服务器 Nacos 集群搭建及使用总结","date":"2022-02-07T15:46:19.000Z","updated":"2023-04-20T13:57:44.632Z","comments":true,"path":"api/articles/BlogRepository/服务器/服务器 Nacos 集群搭建及使用总结.json","keywords":null,"cover":"https://cover.png","text":"1. 架构图 实际使用： 2. 下载官网地址：home (nacos.io) GitHub 下载地址：Releases · alibaba&#x2F;nacos (github.com) 选择对应版本进行下载，下载有可能会很慢 3. 单机模式1、下载完成后上传到服务器 2、解压文...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"服务器","slug":"服务器","count":4,"path":"api/categories/服务器.json"}],"tags":[{"name":"服务器","slug":"服务器","count":5,"path":"api/tags/服务器.json"},{"name":"Nacos","slug":"Nacos","count":1,"path":"api/tags/Nacos.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},"next_post":{"title":"getResource() 获取中文或带空格路径问题报错处理","uid":"aca6817c31ef38e6c4c16e3f7d224fbd","slug":"BlogRepository/问题记录/getResource() 获取中文或带空格路径问题报错处理","date":"2021-09-07T04:33:42.000Z","updated":"2023-04-20T13:57:44.648Z","comments":true,"path":"api/articles/BlogRepository/问题记录/getResource() 获取中文或带空格路径问题报错处理.json","keywords":null,"cover":"https://cover.png","text":"1. 问题描述当我们使用 getResource() 获取文件路径时，路径中带有中文或者空格时，获取到的路径含%20字样 此时我们用该路径创建文件时报错，找不到该路径 我们在资源管理器中复制该路径，发现确实找不到 而我们将路径中的%20字样删除，转换为原本的空格，发现可以找到 2...","link":"","photos":[],"count_time":{"symbolsCount":252,"symbolsTime":"1 mins."},"categories":[{"name":"问题记录","slug":"问题记录","count":7,"path":"api/categories/问题记录.json"}],"tags":[{"name":"Spring","slug":"Spring","count":8,"path":"api/tags/Spring.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false}}