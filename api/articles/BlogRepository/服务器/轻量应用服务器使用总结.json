{"title":"轻量应用服务器使用总结","uid":"6381587c82bf912786d507cd9ab0bca2","slug":"BlogRepository/服务器/轻量应用服务器使用总结","date":"2022-08-14T18:33:49.000Z","updated":"2023-03-13T19:13:04.963Z","comments":true,"path":"api/articles/BlogRepository/服务器/轻量应用服务器使用总结.json","keywords":null,"cover":"https://cover.png","content":"<p><strong>本文使用系统为 CentOS 7.6，服务器为腾讯轻量应用服务器</strong></p>\n<h1 id=\"1-设置-root-密码\"><a href=\"#1-设置-root-密码\" class=\"headerlink\" title=\"1. 设置 root 密码\"></a>1. 设置 root 密码</h1><p>初始化实例后，默认 root 是没有密码的，可以登录云服务器自带的 WebShell，通过 <code>sudo passwd root</code> 命令，设置密码<br><img src=\"https://img-blog.csdnimg.cn/b75a217f64f645249870eaf5e0fb8768.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"2-宝塔面板\"><a href=\"#2-宝塔面板\" class=\"headerlink\" title=\"2. 宝塔面板\"></a>2. <a href=\"https://cloud.tencent.com/document/product/213/45550\">宝塔面板</a></h1><p><strong>服务器管理软件，支持 Windows 和 Linux 系统，可以通过 Web 端轻松管理服务器，提升效率。可安装可不安装</strong></p>\n<h2 id=\"2-1-安装\"><a href=\"#2-1-安装\" class=\"headerlink\" title=\"2.1 安装\"></a>2.1 安装</h2><p>通过 <code>su</code> 命令，输入上面设置好的密码，切换到 root 用户，再使用</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum install -y wget &amp;&amp; wget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install_6.0.sh &amp;&amp; sh install.sh</code></pre>\n\n<p>安装宝塔面板<br><img src=\"https://img-blog.csdnimg.cn/8dc887326f484a8c9f0a64914136b0fb.png\" alt=\"在这里插入图片描述\"><br>输入 <code>y</code> 确认，安装完成后会显示地址和用户名密码<br><img src=\"https://img-blog.csdnimg.cn/0a792b1218aa4b2f93f53c8243705c46.png\" alt=\"在这里插入图片描述\"><br><strong>安装宝塔面板，会创建一个 www 的用户，创建的用户位于 &#x2F;home 目录下</strong></p>\n<h2 id=\"2-2-使用\"><a href=\"#2-2-使用\" class=\"headerlink\" title=\"2.2 使用\"></a>2.2 使用</h2><p>在防火墙规则里开放 8888 端口（该端口为页面显示的访问端口）<br><img src=\"https://img-blog.csdnimg.cn/28a500b553bc4005b72520d170bc9a3d.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/12af40fdb0104b28958a7f2df8b3b081.png\" alt=\"在这里插入图片描述\"><br>通过地址访问宝塔面板，使用用户名密码登录<br><img src=\"https://img-blog.csdnimg.cn/7e0acefd32384ae9b3ea0f6bb58553ad.png\" alt=\"在这里插入图片描述\"><br>绑定账号<br><img src=\"https://img-blog.csdnimg.cn/c43df2362527468389863f417f26c832.png\" alt=\"在这里插入图片描述\"><br>可以选择安装套件，也可以不安装后续自行进行安装<br><img src=\"https://img-blog.csdnimg.cn/96c6425bff164788aa16440f682644eb.png\" alt=\"在这里插入图片描述\"><br>点击面板设置，修改用户名密码<br><img src=\"https://img-blog.csdnimg.cn/f6430baa80454baaa47848fad9583b18.png\" alt=\"在这里插入图片描述\"><br>修改访问端口和地址，修改后的端口同样需要在防火墙规则里放行<br><img src=\"https://img-blog.csdnimg.cn/ada168afcfb64f20a673b95d23a55484.png\" alt=\"在这里插入图片描述\"><br><strong>可以通过宝塔面板，安装对应的套件来简化环境的搭建和项目部署等操作，以及还有文件可视化页面、终端等</strong><br><img src=\"https://img-blog.csdnimg.cn/5bfa204dde614e4aa8d1bdf198aa69bf.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"3-远程连接\"><a href=\"#3-远程连接\" class=\"headerlink\" title=\"3. 远程连接\"></a>3. 远程连接</h1><h2 id=\"3-1-SSH-密码\"><a href=\"#3-1-SSH-密码\" class=\"headerlink\" title=\"3.1 SSH 密码\"></a>3.1 SSH 密码</h2><p>SSH 密码即为 root 密码，用户名为 root<br>1、开启密码登录权限，编辑 <code>/etc/ssh/sshd_config</code> 文件，将 <code>PermitRootLogin</code> 设置为 <code>yes</code>，开启 root 登录。将 <code>PasswordAuthentication</code> 设置为 <code>yes</code>，开启密码认证<br><img src=\"https://img-blog.csdnimg.cn/0cbf20bf35d44a9e9397842c3fd707ee.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/edddf6226be14323a53b3873e929abaa.png\" alt=\"在这里插入图片描述\"><br>2、假如有改动的，重启 SSH 服务，需要 root 权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;bin&#x2F;systemctl restart sshd.service\n或 systemctl restart sshd.service</code></pre>\n\n<p>3、SSH 连接，这里用的 MobaXterm_Portable_v20.2 连接工具。输入服务器地址，再输入登录的用户名及对应密码即可连接<br><img src=\"https://img-blog.csdnimg.cn/fbf6020faa6f41239720704307a86748.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/076bd181f58f41c7940c5cb74824819a.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/c766586602fa4c549c451dc3b9200caa.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-2-SSH-私钥\"><a href=\"#3-2-SSH-私钥\" class=\"headerlink\" title=\"3.2 SSH 私钥\"></a>3.2 SSH 私钥</h2><p>1、进入用户（该用户为需要使用私钥登录的用户，root 就是 root 目录下，进入 root 目录需要 root 权限，其他创建的用户在 home 文件夹下对应的用户目录里）目录下的 <code>.ssh</code> 目录<br><img src=\"https://img-blog.csdnimg.cn/71b31083b41a403e88da870488424e7e.png\" alt=\"在这里插入图片描述\"><br>2、生成密钥对，使用 <code>ssh-keygen -t rsa</code> 命令，之后一路回车即可，中间会要求输入密钥的密码，不需要密码直接回车即可<br><img src=\"https://img-blog.csdnimg.cn/5b0683ee8c9f4ee9a06c51ca251c9341.png\" alt=\"在这里插入图片描述\"><br>3、查看生成文件，其中 id_rsa 是私钥（客户端使用），id_rsa.pub 是公钥（服务器使用）<br><img src=\"https://img-blog.csdnimg.cn/377f9c34b704432ba3db1a6152b6ff5d.png\" alt=\"在这里插入图片描述\"><br>4、开启密钥登录权限（这一步可跳过，无论对不对其进行配置，在腾讯云轻量应用服务器 CentOS 7.6 上不影响，原因可参考 3.3）<br>编辑 <code>/etc/ssh/sshd_config</code> 文件，将 <code>RSAAuthentication</code> 设置为 <code>yes</code>，开启私钥认证（但 CentOS7.4 之后的配置文件中没有这一行，跳过这个设置）。将 <code>PubkeyAuthentication</code> 设置为 <code>yes</code>，开启公钥认证<br><img src=\"https://img-blog.csdnimg.cn/ac26af6116d3471c85aa6c5fe53c5169.png\" alt=\"在这里插入图片描述\"><br>5、假如有改动的，重启 SSH 服务，需要 root 权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;bin&#x2F;systemctl restart sshd.service\n或 systemctl restart sshd.service</code></pre>\n\n<p>6、之后就可以通过私钥直接连接服务器（先从服务器上下载私钥），不需要每次输密码<br><img src=\"https://img-blog.csdnimg.cn/301712feed1e4cc9b33d1913535328cf.png\" alt=\"在这里插入图片描述\"><br>7、但腾讯云服务器这里有一个服务器绑定密钥的配置文件 <code>authorized_keys</code>，该文件内容即为公钥 <code>id_rsa.pub</code>，只有有这个配置文件才能通过私钥连接<br><img src=\"https://img-blog.csdnimg.cn/fb1b53f79ac04e9a911063a42bb6d7ae.png\" alt=\"在这里插入图片描述\"><br><strong>没有的话可以自己创建该文件，然后把公钥复制进去即可，同时权限所有者为 root</strong><br>正常生成该文件的步骤为：在服务器管理页面创建密钥，然后绑定到服务器<br><img src=\"https://img-blog.csdnimg.cn/67f4536fd4f1485282c22af82af8f417.png\" alt=\"在这里插入图片描述\"><br>把公钥复制进来，点击确定，创建密钥<br><img src=\"https://img-blog.csdnimg.cn/3e50dc0da2444907bb0faed95affb980.png\" alt=\"在这里插入图片描述\"><br>然后服务器绑定密钥，在 <code>.ssh</code> 目录下就会生成 <code>authorized_keys</code> 文件<br><img src=\"https://img-blog.csdnimg.cn/07170970f2e34e3194592b2ffae2294f.png\" alt=\"在这里插入图片描述\"><br>8、安装了宝塔面板的也可在宝塔面板安全页面开启配置，但这里的开启 SSH 密钥登录会添加上 RSAAuthentication 配置项，实际上不需要这个配置项，原因见 3.3<br><strong>而且按照上面的操作开启密码登录和密钥登录，宝塔面板这里也不会显示启动，实际上功能都已经成功开启，两种方式都可连接</strong><br><img src=\"https://img-blog.csdnimg.cn/cf2af2b62c4b4690ae817d3a957ec0ea.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"3-3-配置文件中没有-RSAAuthentication\"><a href=\"#3-3-配置文件中没有-RSAAuthentication\" class=\"headerlink\" title=\"3.3 配置文件中没有 RSAAuthentication\"></a>3.3 配置文件中没有 RSAAuthentication</h2><p>CentOS7.4 相对于之前版本，做了一些与 sshd 相关的安全更新来加强 sshd 的安全性。其中之一就是弃用 RSAAuthentication 支持</p>\n<p>目前 SSH 的通讯协议分为第一代和第二代，第二代有更多功能、选项、和更高的安全性，在 2006 正式由 IETF 发表，至今已有十年。由于两代 SSH 协定并不兼容，所以只能二选其一，CentOS 7 的 SSH 预设使用第二代协定</p>\n<p>在同时支持这两个协议的系统中，可以通过  &#x2F;etc&#x2F;ssh&#x2F;sshd_config 配置文件中的</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Protocol 2</code></pre>\n\n<p>来指定使用哪一个版本。RSAAuthentication （RSA认证）是只支持第 1 代 SSH 通讯协议使用的配置项，在 CentOS7.4 中被废除了，而且 CentOS7 开始预设使用第二代通讯协议，在 CentOS7.4 中没有找到指定协议版本的配置行，应该是 CentOS7.4 全面抛弃第 1 代协议</p>\n<p>第 2 代 SSH 通讯协议的密钥验证选项是</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>#PubkeyAuthentication yes</p></blockquote>\n<p><strong>该配置默认是注释掉的，同时似乎是默认开启的，即使注释也能使用密钥登录。</strong> 因此在使用第二代 SSH 通讯协议时不需要再去纠结 RSAAuthentication 选项，在 CentOS7.4 中其强行添加 RSAAuthentication 配置会触发系统对它的废除提示</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>reprocess config line 38: Deprecated option RSAAuthentication</p></blockquote>\n<h1 id=\"4-JDK\"><a href=\"#4-JDK\" class=\"headerlink\" title=\"4. JDK\"></a>4. JDK</h1><h2 id=\"4-1-安装\"><a href=\"#4-1-安装\" class=\"headerlink\" title=\"4.1 安装\"></a>4.1 安装</h2><p>1、首先下载 JDK 安装包，官网下载路径：<a href=\"https://www.oracle.com/java/technologies/downloads/\">https://www.oracle.com/java/technologies/downloads/</a><br><img src=\"https://img-blog.csdnimg.cn/a89524a9725549ef9bd9e46da80bdb8b.png\" alt=\"在这里插入图片描述\"><br>2、下载后上传到服务器<br><img src=\"https://img-blog.csdnimg.cn/45418b6451144823801c6795c921b192.png\" alt=\"在这里插入图片描述\"><br>3、解压文件，<code>tar -zxvf jdk-8u341-linux-x64.tar.gz</code><br><img src=\"https://img-blog.csdnimg.cn/99efba17cbfe485691a379cf2f0ad85e.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/cea305c7eec4477791650d11358f64c6.png\" alt=\"在这里插入图片描述\"><br>4、配置环境变量，找到 <code>/etc/profile</code> 文件添加如下环境变量</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#set java environment\nexport JAVA_HOME&#x3D;&#x2F;usr&#x2F;java&#x2F;jdk&#x2F;jdk1.8.0_341\nexport JRE_HOME&#x3D;&#x2F;usr&#x2F;java&#x2F;jdk&#x2F;jdk1.8.0_341&#x2F;jre\nexport CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;lib:$JRE_HOME&#x2F;lib:$CLASSPATH\nexport PATH&#x3D;$JAVA_HOME&#x2F;bin:$JRE_HOME&#x2F;bin:$JAVA_HOME:$PATH</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/b41603f5c51e49e9992f1f146991691a.png\" alt=\"在这里插入图片描述\"><br>5、生效环境配置 <code>source /etc/profile</code><br><img src=\"https://img-blog.csdnimg.cn/cb57b714e995468eb8f1517e67ba7e37.png\" alt=\"在这里插入图片描述\"><br>6、查看 JDK 版本，输入 <code>java -version</code>，如下提示则表示安装成功<br><img src=\"https://img-blog.csdnimg.cn/6160c51cb599421689ae7d6584fb7464.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"4-2-卸载\"><a href=\"#4-2-卸载\" class=\"headerlink\" title=\"4.2 卸载\"></a>4.2 卸载</h2><p>1、查看安装路径，<code>which java</code><br><img src=\"https://img-blog.csdnimg.cn/2c9cbac2245944fe9b9a877c3d1dd597.png\" alt=\"在这里插入图片描述\"><br>2、删除该路径下的文件夹</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># rm -rf JDK路径\nrm -rf &#x2F;usr&#x2F;jdk&#x2F;jdk1.8.0_172&#x2F;</code></pre>\n\n<p>3、删除环境配置<br><img src=\"https://img-blog.csdnimg.cn/241abe329b7b4d0aae42744fa661f22a.png\" alt=\"在这里插入图片描述\"><br>4、生效环境配置 <code>source /etc/profile</code><br><img src=\"https://img-blog.csdnimg.cn/390d11147fe44a15a7eac147bafec159.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"5-MySQL\"><a href=\"#5-MySQL\" class=\"headerlink\" title=\"5. MySQL\"></a>5. MySQL</h1><h2 id=\"5-1-安装\"><a href=\"#5-1-安装\" class=\"headerlink\" title=\"5.1 安装\"></a>5.1 安装</h2><p>1、去官网下载：<a href=\"https://downloads.mysql.com/archives/community/\">https://downloads.mysql.com/archives/community/</a>，选择 MySQL 版本，操作系统，操作系统版本。CentOS 为 Red Hat 的社区发行版，可以选择该操作系统，同时选择对应的 CentOS 版本，或者也可选择 Linux Generic 通用版<br><img src=\"https://img-blog.csdnimg.cn/42de7ac4cbd44147a0c2bf06dc8e1da9.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/962ebaf59dd14090979d352903684587.png\" alt=\"在这里插入图片描述\"><br>这里选择通用版本进行下载，下载 <code>tar.xz</code> 压缩包文件，或者也可下载没有压缩的 <code>tar</code> 包文件（选择 Red Hat 版本的下载 <code>tar.gz</code> 文件）<br>2、将文件上传到服务器上<br><img src=\"https://img-blog.csdnimg.cn/fb58ffb832ba43e09584e119527b2a53.png\" alt=\"在这里插入图片描述\"><br>3、进行解压，进入压缩包所在目录，执行 <code>tar  -Jxvf  mysql-8.0.19-linux-glibc2.12-x86_64.tar.xz</code>（如果下载的是 Red Hat 的 <code>tar.gz</code> 文件执行 <code>tar -zxvf mysql-8.0.19-el7-x86_64.tar.gz</code>）<br><img src=\"https://img-blog.csdnimg.cn/b3873e9181e6410cb30d6aebf6692f18.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/e837820e6c1d4c378b487dcda9cf9107.png\" alt=\"在这里插入图片描述\"><br>4、卸载 MariaDB<br>在 CentOS中 默认安装有 MariaDB，是 MySQL 的一个分支，主要由开源社区维护。CentOS 7及以上版本已经不再使用 MySQL 数据库，而是使用 MariaDB 数据库。安装 MySQL 的话可以先卸载 MariaDB 数据库</p>\n<p>先查看版本，<code>rpm -qa|grep mariadb</code>，然后执行 <code>rpm -e --nodeps 文件名</code> 进行卸载<br><img src=\"https://img-blog.csdnimg.cn/4608cc7c991c4893a4fda0d4cfdaf432.png\" alt=\"在这里插入图片描述\"><br>5、创建 mysql 用户组和 mysql 用户<br>先检查是否有 mysql 用户组和 mysql 用户，<code>groups mysql</code>，没有再添加，有就跳过这一步<br><img src=\"https://img-blog.csdnimg.cn/4931b8f36b04482286eb2bc0c54188f5.png\" alt=\"在这里插入图片描述\"><br>没有的话再创建 mysql 用户组并创建 mysql 用户添加到用户组， <code>groupadd mysql &amp;&amp; useradd -r -g mysql mysql</code><br><img src=\"https://img-blog.csdnimg.cn/d8e5a68dc9d14bb18797f38326821e58.png\" alt=\"在这里插入图片描述\"><br>6、mysql 的自启动脚本会优先检索 <code>/etc</code> 目录下 <code>my.cnf</code> 的配置文件，创建该<a href=\"http://c.biancheng.net/view/7618.html\">配置文件</a>，配置如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[client]\n# MySQL 客户端连接服务器端时使用的端口号，默认为 3306\nport &#x3D; 3306\n# 套接字文件所在目录\nsocket &#x3D; &#x2F;usr&#x2F;java&#x2F;mysql&#x2F;mysql-8.0.19-linux-glibc2.12-x86_64&#x2F;run&#x2F;mysql.sock\n\n[mysqldump]\n# 支持较大的数据库转储，导出非常巨大的表时需要此项 。\nquick\n# 服务所能处理的请求包的最大大小以及服务所能处理的最大的请求大小（当与大的BLOB字段一起工作时相当必要），每个连接独立的大小，大小动态增加\nmax_allowed_packet &#x3D; 16M\n# 以上参数会被 MySQL 客户端应用读取\n\n[mysqld]\n# mysqld 程序在启动后将在给定 UNIX&#x2F;Linux 账户下执行。mysqld 必须从 root 账户启动才能在启动后切换到另一个账户下执行。mysqld_safe 脚本将默认使用 user&#x3D;mysql 选项来启动 mysqld 程序\nuser &#x3D; mysql\n# 服务端口号，默认为 3306\nport &#x3D; 3306\n# socket 文件所在目录\nsocket &#x3D; &#x2F;usr&#x2F;java&#x2F;mysql&#x2F;mysql-8.0.19-linux-glibc2.12-x86_64&#x2F;run&#x2F;mysql.sock\n# MySQL 服务的唯一编号，每个 MySQL 服务的 id 需唯一\nserver-id &#x3D; 1\n# 进程 id 存放文件\npid_file &#x3D; &#x2F;usr&#x2F;java&#x2F;mysql&#x2F;mysql-8.0.19-linux-glibc2.12-x86_64&#x2F;run&#x2F;mysql.pid\n# 指定 MySQL 安装的绝对路径\nbasedir &#x3D; &#x2F;usr&#x2F;java&#x2F;mysql&#x2F;mysql-8.0.19-linux-glibc2.12-x86_64\n# 指定 MySQL 数据存放的绝对路径\ndatadir &#x3D; &#x2F;usr&#x2F;java&#x2F;mysql&#x2F;mysql-8.0.19-linux-glibc2.12-x86_64&#x2F;data\n\n# 数据库默认字符集，主流字符集支持一些特殊表情符号（特殊表情符占用 4 个字节）\ncharacter-set-server &#x3D; utf8mb4\n# 数据库字符集对应一些排序等规则，要和 character-set-server 对应\ncollation-server &#x3D; utf8mb4_general_ci\n# 设置 client 连接 mysql 时的字符集，防止乱码\ninit_connect &#x3D; &#39;SET NAMES utf8mb4&#39;\n# 是否对 sql 语句大小写敏感，1 表示不敏感\nlower_case_table_names &#x3D; 1\n\n# 用于指定索引缓冲区的大小\nkey_buffer_size &#x3D; 64M\n# 仅仅允许使用键值的 UPDATES 和 DELETES\n#no-auto-rehash\n# 表示 SQL 模式的参数，通过这个参数可以设置检验 SQL 语句的严格程度\n#sql_mode&#x3D;TRADITIONAL\n\n# 日志文件位置\nlog-error &#x3D; &#x2F;usr&#x2F;java&#x2F;mysql&#x2F;mysql-8.0.19-linux-glibc2.12-x86_64&#x2F;log&#x2F;mysql_error.log</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/06c017643585478fac78f0819cf6489d.png\" alt=\"在这里插入图片描述\"><br>7、根据配置文件，创建对应的 log、run、data 等文件夹，<code>mkdir data log run</code><br><img src=\"https://img-blog.csdnimg.cn/4cf5ca8ead254aa181b0462243f68477.png\" alt=\"在这里插入图片描述\"><br>8、赋予权限，<code>chown -R mysql:mysql ./</code><br><img src=\"https://img-blog.csdnimg.cn/c5bf8d45f40f4ab595627a08d7e948ec.png\" alt=\"在这里插入图片描述\"><br>9、初始化 mysql</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">bin&#x2F;mysqld --initialize --user&#x3D;mysql --basedir&#x3D;&#x2F;usr&#x2F;java&#x2F;mysql&#x2F;mysql-8.0.19-linux-glibc2.12-x86_64 --datadir&#x3D;&#x2F;usr&#x2F;java&#x2F;mysql&#x2F;mysql-8.0.19-linux-glibc2.12-x86_64&#x2F;data</code></pre>\n\n<ul>\n<li>defaults-file：指定配置文件（要放在–initialize 前面）</li>\n<li>user： 指定用户</li>\n<li>basedir：指定安装目录</li>\n<li>datadir：指定初始化数据目录</li>\n<li>intialize-insecure：初始化无密码</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/07fad794a26b4499b84485fc7f049bc2.png\" alt=\"在这里插入图片描述\"><br>控制台没有输出，可以去日志文件里查看临时密码<br><img src=\"https://img-blog.csdnimg.cn/5eb4519c13bb476c83efcf7a6c03dda3.png\" alt=\"在这里插入图片描述\"><br>10、添加 mysqld 服务到系统</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cp -a &#x2F;usr&#x2F;java&#x2F;mysql&#x2F;mysql-8.0.19-linux-glibc2.12-x86_64&#x2F;support-files&#x2F;mysql.server &#x2F;etc&#x2F;init.d&#x2F;mysqld</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/ee91957af7c94e5b97c7af5001d01a22.png\" alt=\"在这里插入图片描述\"><br>11、启动服务，<code>service mysqld start</code><br><img src=\"https://img-blog.csdnimg.cn/acfa503463e9468197ed20a2e33ab23b.png\" alt=\"在这里插入图片描述\"><br>12、查看是否启动服务，<code>ps -ef | grep mysql</code><br><img src=\"https://img-blog.csdnimg.cn/c5266f9528b24bb9b0956c0a95fe8860.png\" alt=\"在这里插入图片描述\"><br>13、查看 mysql 运行状态，<code>service mysqld status</code><br><img src=\"https://img-blog.csdnimg.cn/f4bff2f027e944bb8c07e0742b42c10f.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"5-2-使用\"><a href=\"#5-2-使用\" class=\"headerlink\" title=\"5.2 使用\"></a>5.2 使用</h2><p>1、登录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;usr&#x2F;java&#x2F;mysql&#x2F;mysql-8.0.19-linux-glibc2.12-x86_64&#x2F;bin&#x2F;mysql -u root -p</code></pre>\n\n<p>会提示输入初始化的时候生成的临时密码<br><img src=\"https://img-blog.csdnimg.cn/ca5110b4ccc44dad8f72c9e5da13627d.png\" alt=\"在这里插入图片描述\"><br>2、修改密码</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;新密码&#39;;</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/6d6ffb1aec194298b0fc2d4adaf8887f.png\" alt=\"在这里插入图片描述\"><br>3、远程连接<br>进入 mysql 数据库，<code>use mysql</code>，修改 user 表，host 默认值都是 localhost，需要修改 root 用户的 host 值为 %，<code>update user set host=&#39;%&#39; where user =&#39;root&#39;;</code>，刷新权限，<code>flush privileges;</code><br><img src=\"https://img-blog.csdnimg.cn/386521fd5478469da73f7b724b53662e.png\" alt=\"在这里插入图片描述\"><br>开放对应的端口<br><img src=\"https://img-blog.csdnimg.cn/0e2e3715df1f4fcdbe1252c886fd82a9.png\" alt=\"在这里插入图片描述\"><br>使用 Navicat 进行连接，成功<br><img src=\"https://img-blog.csdnimg.cn/d219282536124ceaaecf66f07c82545f.png\" alt=\"在这里插入图片描述\"><br>4、退出，<code>quit</code><br><img src=\"https://img-blog.csdnimg.cn/0e84053777c54570b1ef293fadce1896.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"6-Nginx\"><a href=\"#6-Nginx\" class=\"headerlink\" title=\"6. Nginx\"></a>6. Nginx</h1><h2 id=\"6-1-安装\"><a href=\"#6-1-安装\" class=\"headerlink\" title=\"6.1 安装\"></a>6.1 安装</h2><p>1、GCC 安装，安装 Nginx 需要先将官网下载的源码进行编译，编译依赖 gcc 环境，如果没有 gcc 环境，则需要安装<br>先通过 <code>gcc --version</code> 查看有无 gcc<br><img src=\"https://img-blog.csdnimg.cn/5eeda2f82c024c1f8ce7dfe234db41e1.png\" alt=\"在这里插入图片描述\"><br>没有的话再通过 <code>yum install gcc-c++</code> 进行安装<br>2、PCRE 安装，PCRE(Perl Compatible Regular Expressions) 是一个 Perl 库，包括 perl 兼容的正则表达式库。Nginx 的 http 模块使用 pcre 来解析正则表达式，所以需要在 Linux 上安装 pcre 库，pcre-devel 是使用 pcre 开发的一个二次开发库。Nginx 也需要此库<br>可以先通过 <code>rpm -qa pcre</code> 查看有无 PCRE<br><img src=\"https://img-blog.csdnimg.cn/e0eaa836dbaf46fe8b8b27d77ab3e9fe.png\" alt=\"在这里插入图片描述\"><br>没有的话可以通过 <code>yum install -y pcre pcre-devel</code> 来安装<br>3、Zlib 安装，zlib 库提供了很多种压缩和解压缩的方式， Nginx 使用 zlib 对 http 包的内容进行 gzip ，所以需要安装 zlib 库<br>可以通过 <code>yum list installed | grep zlib</code> 查看是否安装了 Zlib<img src=\"https://img-blog.csdnimg.cn/b6cb01e302344b8db24aef941a2cea6e.png\" alt=\"在这里插入图片描述\"><br>没有的话通过 <code>yum install -y zlib zlib-devel</code> 进行安装<br>4、OpenSSL 安装，OpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及 SSL 协议，并提供丰富的应用程序供测试或其它目的使用。Nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http），所以需要安装 OpenSSL 库<br>先通过 <code>rpm -qa pcre</code> 查看是否安装了 OpenSSL<br><img src=\"https://img-blog.csdnimg.cn/ee2dde0740874446a1dc24df39d3b45b.png\" alt=\"在这里插入图片描述\"><br>没有的话通过 <code>yum install -y openssl openssl-devel</code> 进行安装<br>5、去官网下载 Nginx，<a href=\"https://nginx.org/en/download.html\">https://nginx.org/en/download.html</a><br><img src=\"https://img-blog.csdnimg.cn/37e9dcf541c149cfa66de3a52b064a37.png\" alt=\"在这里插入图片描述\"><br>6、上传到服务器上<br><img src=\"https://img-blog.csdnimg.cn/feaa242ba8734a2cb4ad411925148799.png\" alt=\"在这里插入图片描述\"><br>7、解压到当前目录，<code>tar -zxvf nginx-1.22.0.tar.gz</code><br><img src=\"https://img-blog.csdnimg.cn/90d48d37b0084b1899adec0f0f58df28.png\" alt=\"在这里插入图片描述\"><br>8、进入解压后的目录，运行 <code>./configure --with-http_stub_status_module --with-http_ssl_module</code> 配置环境，默认安装路径在 <code>/usr/local/nginx</code>，这里安装了 ssl 模块用于部署证书<br><img src=\"https://img-blog.csdnimg.cn/907a8a818ac94f70aa7a4a67180ab3c1.png\" alt=\"在这里插入图片描述\"><br>假如要指定安装路径，可以通过 <code>-prefix</code> 设置安装路径，<code>./configure --prefix=/usr/java/nginx --with-http_stub_status_module --with-http_ssl_module</code><br><img src=\"https://img-blog.csdnimg.cn/97f52ef3d6e5418e9416f1ba4a0f3077.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2f434ead57944111aaca7ced4f75fbcb.png\" alt=\"在这里插入图片描述\"><br>9、再执行 <code>make  &amp;&amp;  make install</code> 编译并安装环境<br><img src=\"https://img-blog.csdnimg.cn/05f153ca4bc142d7b15fc94cf681c3de.png\" alt=\"在这里插入图片描述\"><br>10、进入安装目录的 sbin 目录下，启动 Nginx 服务，<code>./nginx</code><br><img src=\"https://img-blog.csdnimg.cn/de48fcd055284e7bb917ffe60eea3a3a.png\" alt=\"在这里插入图片描述\"><br>11、查看是否开启了服务，<code>netstat -ntlp | grep nginx</code><br><img src=\"https://img-blog.csdnimg.cn/55c804d089db402db48b54aa0e1ec03f.png\" alt=\"在这里插入图片描述\"><br>12、在浏览器输入服务器地址，看见如下界面即表示成功<br><img src=\"https://img-blog.csdnimg.cn/d891cd39e6164d53b9541b91906d3076.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"6-2-使用\"><a href=\"#6-2-使用\" class=\"headerlink\" title=\"6.2 使用\"></a>6.2 使用</h2><p>相关指令，先到 Nginx 安装目录的 sbin 目录下</p>\n<ol>\n<li>启动服务：<code>./nginx</code></li>\n<li>停止服务，此方式停止步骤是待 Nginx 进程处理任务完毕进行停止。<code>./nginx -s stop</code></li>\n<li>退出服务，此方式相当于先查出 Nginx 进程 id 再使用 kill 命令强制杀掉进程。<code>./nginx -s quit</code></li>\n<li>重新加载，当 Nginx 的配置文件 nginx.conf 修改后，要想让配置生效需要重启 nginx，使用-s reload不用先停止 nginx再启动 nginx 即可将配置信息在 nginx 中生效。<code>./nginx -s reload</code></li>\n<li>查询 nginx 进程：<code>ps aux|grep nginx</code></li>\n</ol>\n<p><strong>项目部署相关配置见 8</strong></p>\n<h2 id=\"6-3-查看有无安装总结\"><a href=\"#6-3-查看有无安装总结\" class=\"headerlink\" title=\"6.3 查看有无安装总结\"></a>6.3 查看有无安装总结</h2><ol>\n<li><code>rpm</code> 包安装的，可以用 <code>rpm -qa</code> 看到，如果要查找某软件包是否安装，用 <code>rpm -qa | grep “软件或者包的名字”</code></li>\n<li>以 <code>deb</code> 包安装的，可以用 <code>dpkg -l</code> 看到。如果是查找指定软件包，用 <code>dpkg -l | grep “软件或者包的名字”</code></li>\n<li><code>yum</code> 方法安装的，可以用 <code>yum list installed</code> 查找，如果是查找指定包，用 <code>yum list installed | grep “软件名或者包名”</code></li>\n</ol>\n<h1 id=\"7-Redis\"><a href=\"#7-Redis\" class=\"headerlink\" title=\"7. Redis\"></a>7. Redis</h1><p>见另一篇博客： <a href=\"https://blog.csdn.net/ACE_U_005A/article/details/123102635\">服务器安装Redis和配置后台远程连接</a></p>\n<h1 id=\"8-前端与后端项目部署\"><a href=\"#8-前端与后端项目部署\" class=\"headerlink\" title=\"8. 前端与后端项目部署\"></a>8. 前端与后端项目部署</h1><p>见另一篇博客：<a href=\"https://blog.csdn.net/ACE_U_005A/article/details/122851388\">轻量应用服务器部署 SpringBoot 前后端分离项目</a></p>\n","feature":false,"text":"本文使用系统为 CentOS 7.6，服务器为腾讯轻量应用服务器 1. 设置 root 密码初始化实例后，默认 root 是没有密码的，可以登录云服务器自带的 WebShell，通过 sudo passwd root 命令，设置密码 2. 宝塔面板服务器管理软件，支持 Windo...","link":"","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[{"name":"服务器","slug":"服务器","count":3,"path":"api/categories/服务器.json"}],"tags":[{"name":"服务器","slug":"服务器","count":3,"path":"api/tags/服务器.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E8%AE%BE%E7%BD%AE-root-%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">1. 设置 root 密码</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF\"><span class=\"toc-text\">2. 宝塔面板</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">2.1 安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">2.2 使用</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">3. 远程连接</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-SSH-%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">3.1 SSH 密码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-SSH-%E7%A7%81%E9%92%A5\"><span class=\"toc-text\">3.2 SSH 私钥</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E6%B2%A1%E6%9C%89-RSAAuthentication\"><span class=\"toc-text\">3.3 配置文件中没有 RSAAuthentication</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-JDK\"><span class=\"toc-text\">4. JDK</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">4.1 安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-%E5%8D%B8%E8%BD%BD\"><span class=\"toc-text\">4.2 卸载</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-MySQL\"><span class=\"toc-text\">5. MySQL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-1-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">5.1 安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-2-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">5.2 使用</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-Nginx\"><span class=\"toc-text\">6. Nginx</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-1-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">6.1 安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-2-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">6.2 使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-3-%E6%9F%A5%E7%9C%8B%E6%9C%89%E6%97%A0%E5%AE%89%E8%A3%85%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">6.3 查看有无安装总结</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#7-Redis\"><span class=\"toc-text\">7. Redis</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#8-%E5%89%8D%E7%AB%AF%E4%B8%8E%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">8. 前端与后端项目部署</span></a></li></ol>","author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"mapped":true,"prev_post":{"title":"记SpringBoot拦截器报错getWriter() has already been called for this response","uid":"91927c15e1d4404177918c3eb486f6d5","slug":"BlogRepository/问题记录/记SpringBoot拦截器报错getWriter() has already been called for this response","date":"2022-09-01T02:40:59.000Z","updated":"2023-03-13T19:13:04.973Z","comments":true,"path":"api/articles/BlogRepository/问题记录/记SpringBoot拦截器报错getWriter() has already been called for this response.json","keywords":null,"cover":"https://cover.png","text":"1. 问题在拦截器中返回信息时，使用 response.getWriter() 报错 getWriter() has already been called for this response。这里使用的 getWriter()操作的是字符，所以使用 print() 或 writ...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"问题记录","slug":"问题记录","count":7,"path":"api/categories/问题记录.json"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":4,"path":"api/tags/SpringBoot.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},"next_post":{"title":"Java 数据结构总结","uid":"3dca1d49253087e654c27123d044ed56","slug":"BlogRepository/Java/Java 数据结构总结","date":"2022-08-05T07:14:42.000Z","updated":"2023-03-13T19:13:04.933Z","comments":true,"path":"api/articles/BlogRepository/Java/Java 数据结构总结.json","keywords":null,"cover":"https://cover.png","text":"1. 链表链表（LinkedList） 虽然是一种线性表，但是并不会按线性的顺序存储数据，使用的不是连续的内存空间来存储数据 链表的插入和删除操作的复杂度为 O(1) ，只需要知道目标位置元素的上一个元素即可。但是，在查找一个节点或者访问特定位置的节点的时候复杂度为 O(n) 使...","link":"","photos":[],"count_time":{"symbolsCount":"82k","symbolsTime":"1:15"},"categories":[{"name":"Java","slug":"Java","count":4,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":11,"path":"api/tags/Java.json"},{"name":"数据结构","slug":"数据结构","count":1,"path":"api/tags/数据结构.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false}}