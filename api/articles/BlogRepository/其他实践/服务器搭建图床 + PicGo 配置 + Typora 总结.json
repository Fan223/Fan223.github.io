{"title":"服务器搭建图床 + PicGo 配置 + Typora 总结","uid":"c5ae64d2562b4969258d0db468c84e0d","slug":"BlogRepository/其他实践/服务器搭建图床 + PicGo 配置 + Typora 总结","date":"2022-03-14T14:12:13.000Z","updated":"2023-04-20T13:57:44.617Z","comments":true,"path":"api/articles/BlogRepository/其他实践/服务器搭建图床 + PicGo 配置 + Typora 总结.json","keywords":null,"cover":"https://cover.png","content":"<h1 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1. 前言\"></a>1. 前言</h1><p>之前用的都是 CSDN 图床，首先本来也会发到 CSDN 上，顺便在自己的网站上也能访问，而且也方便。但最近 CSDN 加了防盗链，全挂了，也因此想自己搭建一个图床</p>\n<p>免费图床总归是不靠谱的，所以选择一个付费的好一点，市面上常用的有阿里云 OSS、腾讯云 COS、七牛云等。阿里云 OSS 存储，每个月有 5 GB 的免费存储和流量额度；腾讯云 COS 存储有 6 个月的免费 50 GB 存储额度；七牛云有一定容量的永久免费额度</p>\n<p>但是用过后个人总感觉有一定的条件限制，虽然有免费额度，但是后续的存储容量、流量、请求数都要计费，不过阿里云好像不达到一定金额不会算，腾讯云不清楚，虽然作为个人博客而言，价格也不会很高，但自己本身已经有服务器，因此想在自己的服务器上搭一个图床，方便管理和转移，同时也没有其他的限制</p>\n<h1 id=\"2-服务器搭建图床\"><a href=\"#2-服务器搭建图床\" class=\"headerlink\" title=\"2. 服务器搭建图床\"></a>2. 服务器搭建图床</h1><h2 id=\"2-1-安装-Nginx\"><a href=\"#2-1-安装-Nginx\" class=\"headerlink\" title=\"2.1 安装 Nginx\"></a>2.1 <a href=\"https://blog.csdn.net/ACE_U_005A/article/details/122767405\">安装 Nginx</a></h2><p>首先需要安装 Nginx，以此来启动一个网站服务</p>\n<p><strong>见另一篇博客：<a href=\"https://blog.csdn.net/ACE_U_005A/article/details/122767405\">轻量应用服务器使用总结</a> 的安装 Nginx 部分</strong></p>\n<h2 id=\"2-2-部署配置\"><a href=\"#2-2-部署配置\" class=\"headerlink\" title=\"2.2 部署配置\"></a>2.2 部署配置</h2><p>1、先创建一个文件夹，用于存储图片，这里我的路径为 <code>/usr/java/fan/images</code></p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315095453.png\"></p>\n<p>2、添加一条 <code>img</code> 的二级域名解析记录，主要为了方便管理和查看，后续以 <code>img.域名</code> 作为图床地址，没有域名跳过这步，后续直接使用服务器 IP 也可以</p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315095750.png\"></p>\n<p><strong>3、给该二级域名申请 SSL 证书</strong></p>\n<p>这里需要注意，这一步的目的是<strong>给图床服务加上 HTTPS</strong>。所以假如你的主域名是付费的泛域名 SSL 证书，那么其下的二级域名都自带 HTTPS 保护，不需要再额外操作。假如是免费的单域名证书，则需要单独给二级域名申请</p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315100155.png\"></p>\n<p>这一步很重要。因为假如不加上 HTTPS，在使用 HTTPS 的网站（绝大部分都是）上查看图片时，会无法加载。通过 F12 查看请求可以发现默认使用的是 HTTPS 去请求图片的。由于浏览器安全策略的关系，访问不安全（非 HTTPS）的网站需要手动授权允许才能访问</p>\n<p>假如是直接访问图片，浏览器会有一个授权提示，选择继续访问即可，但是网站去访问加载图片时则不会，因此会加载失败。虽然先直接访问图片然后手动授权即可正常加载，但是一般用户都不会想到这个原因，而且也很麻烦，不友好。同时本地 Typora 访问时是没有这个授权操作的，直接无法加载，所以得加上 HTTPS</p>\n<p>4、进入 Nginx 的 conf 目录，编辑 Nginx 的配置文件 <code>nginx.conf</code></p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315102306.png\"></p>\n<p>5、添加 server 配置，server_name 为上面添加的二级域名解析，这里的 root 路径是网站的根目录路径，即上面创建的存储图片文件夹路径，这里使用的是相对路径，以 Nginx 安装目录为起始目录，同时部署上面的 SSL 证书</p>\n<p><strong>部署操作见另一篇博客：<a href=\"https://blog.csdn.net/ACE_U_005A/article/details/122851388\">轻量应用服务器部署 SpringBoot 前后端分离项目</a> 的配置 SSL 证书部分</strong></p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315101953.png\"></p>\n<p>6、然后启动 Nginx，这里在前面的安装 Nginx 博客里有说到，这里不再赘述</p>\n<p>7、此时可以上传一张图片到上面创建的 <code>fan/images</code> 文件夹下，通过 <code>域名/图片名</code> 即可访问</p>\n<h1 id=\"3-PicGo\"><a href=\"#3-PicGo\" class=\"headerlink\" title=\"3. PicGo\"></a>3. PicGo</h1><h2 id=\"3-1-下载\"><a href=\"#3-1-下载\" class=\"headerlink\" title=\"3.1 下载\"></a>3.1 <a href=\"https://github.com/Molunerfinn/PicGo/releases\">下载</a></h2><p><strong>GitHub 下载地址：<a href=\"https://github.com/Molunerfinn/PicGo/releases\">Releases · Molunerfinn&#x2F;PicGo (github.com)</a></strong></p>\n<p>选择对应系统和位数下载即可</p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315102716.png\"></p>\n<h2 id=\"3-2-安装\"><a href=\"#3-2-安装\" class=\"headerlink\" title=\"3.2 安装\"></a>3.2 安装</h2><p>1、双击打开 exe 文件，选择安装用户</p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315103930.png\"></p>\n<p>2、选择安装路径，自定义路径即可</p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315103104.png\"></p>\n<p>3、等待安装完成</p>\n<h2 id=\"3-3-使用\"><a href=\"#3-3-使用\" class=\"headerlink\" title=\"3.3 使用\"></a>3.3 使用</h2><p>1、下载插件 <code>picgo-plugin-sftp-uploader</code></p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315103153.png\"></p>\n<p>2、SFTP 配置</p>\n<ul>\n<li>图床配置名：随意定义</li>\n<li>网站标识：随意定义</li>\n<li>配置文件：为 SFTP 配置文件的路径</li>\n</ul>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315103238.png\"></p>\n<p>3、SFTP 配置文件，在上面的路径下创建对应文件</p>\n<p><strong>详细可见官方配置说明：<a href=\"https://github.com/imba97/picgo-plugin-sftp-uploader\">imba97&#x2F;picgo-plugin-sftp-uploader</a></strong></p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &#x2F;&#x2F; 网站标识\n\t&quot;Fan&quot;: &#123;\n        &#x2F;&#x2F; 图片网站的域名\n\t\t&quot;url&quot;: &quot;http:&#x2F;&#x2F;img.xxx.xxx&quot;,\n        &#x2F;&#x2F; 图片在网址中的路径，即网站根目录下的路径，这里我的网站根目录就是 fan&#x2F;images\n\t\t&quot;path&quot;: &quot;&#x2F;&#123;year&#125;&#x2F;&#123;month&#125;&#x2F;&#123;fullName&#125;&quot;,\n         &#x2F;&#x2F; 图片在服务器的真实路径\n\t\t&quot;uploadPath&quot;: &quot;&#x2F;usr&#x2F;java&#x2F;fan&#x2F;images&#x2F;&#123;year&#125;&#x2F;&#123;month&#125;&#x2F;&#123;fullName&#125;&quot;,\n        &#x2F;&#x2F; 一般是服务器 IP\n\t\t&quot;host&quot;: &quot;124.xxx.xxx.90&quot;,\n        &#x2F;&#x2F; 端口\n\t\t&quot;port&quot;: 22,\n        &#x2F;&#x2F; SSH 用户登录用户\n\t\t&quot;username&quot;: &quot;username&quot;,\n        &#x2F;&#x2F; SSH 用户登录密码\n\t\t&quot;password&quot;: &quot;password&quot;\n\t&#125;\n&#125;</code></pre>\n\n<p>4、上传文件，选择 SFTP 上传</p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315104119.png\"></p>\n<p>5、即可在服务器看到上传的文件，文件夹为配置文件配置的路径</p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315104144.png\"></p>\n<p>6、同时浏览器也可进行访问</p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315104300.png\"></p>\n<h1 id=\"4-Typora\"><a href=\"#4-Typora\" class=\"headerlink\" title=\"4. Typora\"></a>4. Typora</h1><p>在 Typora 的设置里找到图像选项，选择插入图片时上传图片，然后上传服务选择 PicGo，同时选择本地安装的 PicGo.exe 文件</p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315104410.png\"></p>\n<p>这样在 Typora 插入图片时即可自动上传到服务器上</p>\n<h1 id=\"5-额外优势\"><a href=\"#5-额外优势\" class=\"headerlink\" title=\"5. 额外优势\"></a>5. 额外优势</h1><p>之前使用 OSS 存储时还有一个问题就是，无法直接转存到 CSDN 上，复制内容时，对应的 OSS 图片链接会提示外链转存失败</p>\n<p><img src=\"http://img.fan223.cn/2023/03/20230315105111.png\"></p>\n<p>假如要显示的话只能使用 <code>&lt;img&gt;</code> 格式来引用图片，十分不方便。使用服务器图床就没有这个问题，可以直接转存到 CSDN 上</p>\n","feature":false,"text":"1. 前言之前用的都是 CSDN 图床，首先本来也会发到 CSDN 上，顺便在自己的网站上也能访问，而且也方便。但最近 CSDN 加了防盗链，全挂了，也因此想自己搭建一个图床 免费图床总归是不靠谱的，所以选择一个付费的好一点，市面上常用的有阿里云 OSS、腾讯云 COS、七牛云等...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"其他实践","slug":"其他实践","count":4,"path":"api/categories/其他实践.json"}],"tags":[{"name":"服务器","slug":"服务器","count":5,"path":"api/tags/服务器.json"},{"name":"PicGo","slug":"PicGo","count":1,"path":"api/tags/PicGo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">1. 前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A\"><span class=\"toc-text\">2. 服务器搭建图床</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E5%AE%89%E8%A3%85-Nginx\"><span class=\"toc-text\">2.1 安装 Nginx</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.2 部署配置</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-PicGo\"><span class=\"toc-text\">3. PicGo</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">3.1 下载</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">3.2 安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">3.3 使用</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-Typora\"><span class=\"toc-text\">4. Typora</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E9%A2%9D%E5%A4%96%E4%BC%98%E5%8A%BF\"><span class=\"toc-text\">5. 额外优势</span></a></li></ol>","author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"mapped":true,"prev_post":{"title":"Redis 启动报错 QForkMasterInit system error caught error code=0x000005af 解决","uid":"e7512e112eb3757deb99ae02ef8d3f9b","slug":"BlogRepository/问题记录/Redis 启动报错 QForkMasterInit system error caught. error code=0x000005af 解决","date":"2022-03-16T08:20:49.000Z","updated":"2023-04-20T13:57:44.648Z","comments":true,"path":"api/articles/BlogRepository/问题记录/Redis 启动报错 QForkMasterInit system error caught. error code=0x000005af 解决.json","keywords":null,"cover":"https://cover.png","text":"1. 问题直接用 redis-server.exe 启动时闪退，用脚本加上配置文件启动也闪退，用命令行启动时，报错： [23848] 16 Mar 16:10:32.565 # QForkMasterInit: system error caught. error code&#x...","link":"","photos":[],"count_time":{"symbolsCount":356,"symbolsTime":"1 mins."},"categories":[{"name":"问题记录","slug":"问题记录","count":7,"path":"api/categories/问题记录.json"}],"tags":[{"name":"Redis","slug":"Redis","count":5,"path":"api/tags/Redis.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},"next_post":{"title":"使用 GitHub Pages 和 Hexo 以及 Aurora 主题搭建静态个人博客","uid":"a06916b53ce52671ec4b90f79bdb1258","slug":"BlogRepository/其他实践/使用 GitHub Pages 和 Hexo 以及 Aurora 主题搭建静态个人博客","date":"2022-03-13T10:12:13.000Z","updated":"2023-04-20T13:57:44.617Z","comments":true,"path":"api/articles/BlogRepository/其他实践/使用 GitHub Pages 和 Hexo 以及 Aurora 主题搭建静态个人博客.json","keywords":null,"cover":"https://cover.png","text":"示例站点 1. GitHub PagesGitHub Pages 是一个静态站点托管服务，直接将个人、组织或项目的页面托管于 GitHub 库或仓库 （repository）中 1、新建一个仓库，名为 用户名.github.io 2、添加一条 blog 的二级域名解析记录，需要将...","link":"","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"22 mins."},"categories":[{"name":"其他实践","slug":"其他实践","count":4,"path":"api/categories/其他实践.json"}],"tags":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/tags/Hexo.json"},{"name":"GitHub Pages","slug":"GitHub-Pages","count":1,"path":"api/tags/GitHub-Pages.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false}}