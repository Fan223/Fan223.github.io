{"title":"记 Vue + Element-UI 上传组件上传图片到 https 图床接口（sm:ms）","uid":"7879396660455873787f556f0fa69f30","slug":"BlogRepository/问题记录/记 Vue + Element-UI 上传组件上传图片到 https 图床接口（sm_ms）","date":"2022-05-21T02:10:12.000Z","updated":"2023-03-13T19:13:04.973Z","comments":true,"path":"api/articles/BlogRepository/问题记录/记 Vue + Element-UI 上传组件上传图片到 https 图床接口（sm_ms）.json","keywords":null,"cover":"https://cover.png","content":"<h1 id=\"1-上传组件\"><a href=\"#1-上传组件\" class=\"headerlink\" title=\"1. 上传组件\"></a>1. 上传组件</h1><p>action 表示上传的地址，这里使用 http-request 覆盖默认的上传行为，自定义上传的实现</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;el-upload\n\taction&#x3D;&quot;&quot;\n\tclass&#x3D;&quot;alignContainer&quot;\n\t:http-request&#x3D;&quot;upload&quot;\n\t:show-file-list&#x3D;&quot;false&quot;\n\t:before-upload&#x3D;&quot;beforeAvatarUpload&quot;\n&gt;\n\t&lt;div class&#x3D;&quot;avatar-update&quot;&gt;修改头像&lt;&#x2F;div&gt;\n&lt;&#x2F;el-upload&gt;</code></pre>\n\n<h1 id=\"2-上传实现\"><a href=\"#2-上传实现\" class=\"headerlink\" title=\"2. 上传实现\"></a>2. 上传实现</h1><p>创建一个 formData 对象，然后将 组件传进来的文件 file 传进去。这里的参数名 smfile 是图床接口所需要的参数，类型为 file<br><img src=\"https://img-blog.csdnimg.cn/301e3df7529f4ce0b9f2506a3adec571.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">upload(file) &#123;\n      const formData &#x3D; new FormData()\n      formData.append(&#39;smfile&#39;, file.file)\n\n      axios.post(&#39;&#x2F;api&#x2F;v2&#x2F;upload&#39;, formData, &#123;\n        headers: &#123;\n          &#39;Content-Type&#39;: &#39;multipart&#x2F;form-data&#39;,\n          &#39;Authorization&#39;: &#39;xxx&#39;\n        &#125;\n      &#125;, &#123; timeout: 30000 &#125;).then(res &#x3D;&gt; &#123;\n        if (res.data.code &#x3D;&#x3D;&#x3D; &#39;image_repeated&#39;) &#123;\n          this.userInfo.avatar &#x3D; res.data.images;\n        &#125; else &#123;\n          this.userInfo.avatar &#x3D; res.data.data.url;\n        &#125;\n\n        this.$axios.put(&#39;&#x2F;hrms&#x2F;employee&#x2F;updateEmployee&#39;, this.userInfo).then(() &#x3D;&gt; &#123;\n          this.$message.success(&#39;修改头像成功&#39;);\n          this.$bus.$emit(&#39;refreshNavHeader&#39;);\n        &#125;)\n      &#125;)\n&#125;</code></pre>\n\n<h1 id=\"3-https-代理设置\"><a href=\"#3-https-代理设置\" class=\"headerlink\" title=\"3. https 代理设置\"></a>3. https 代理设置</h1><p><strong>secure 表示安全证书校验，设为 false。然后设置 Referer，表示请求来源（重要）</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const &#123; defineConfig &#125; &#x3D; require(&#39;@vue&#x2F;cli-service&#39;)\nmodule.exports &#x3D; defineConfig(&#123;\n  transpileDependencies: true,\n  lintOnSave: false,\n  devServer: &#123;\n    port: 8080,\n    proxy: &#123;\n      &#39;&#x2F;hrms&#39;: &#123;\n        target: &#39;http:&#x2F;&#x2F;localhost:8888&#39;,\n        ws: true,\n        changeOrigin: true\n      &#125;,\n      &quot;&#x2F;api&quot;: &#123;\n        target: &#39;https:&#x2F;&#x2F;sm.ms&#39;,\n        changeOrigin: true, \n        secure: false,\n        headers: &#123;                \n          Referer: &#39;https:&#x2F;&#x2F;sm.ms&#39;\n        &#125;\n      &#125;,\n    &#125;\n  &#125;\n&#125;)</code></pre>\n\n<p><strong>注：</strong> 重点是 https 设置，其次是文件类型，一般浏览器会默认转为 multipart&#x2F;form-data，使用 FormData 来进行传输<br><img src=\"https://img-blog.csdnimg.cn/84cf17ebb8294820868c675dfeef797f.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/90830c67c2ee4f92a91a8f8bb37c7700.png\" alt=\"在这里插入图片描述\"></p>\n","feature":false,"text":"1. 上传组件action 表示上传的地址，这里使用 http-request 覆盖默认的上传行为，自定义上传的实现 &lt;el-upload action&#x3D;&quot;&quot; class&#x3D;&quot;alignContainer&quot; :htt...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"问题记录","slug":"问题记录","count":7,"path":"api/categories/问题记录.json"}],"tags":[{"name":"Vue","slug":"Vue","count":5,"path":"api/tags/Vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">1. 上传组件</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E4%B8%8A%E4%BC%A0%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">2. 上传实现</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-https-%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">3. https 代理设置</span></a></li></ol>","author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"mapped":true,"prev_post":{"title":"Spring5 总结","uid":"3b3f88b9af43070e80fc66fe9324e787","slug":"BlogRepository/Spring/Spring5 总结","date":"2022-06-08T18:01:17.000Z","updated":"2023-03-13T19:13:04.940Z","comments":true,"path":"api/articles/BlogRepository/Spring/Spring5 总结.json","keywords":null,"cover":"https://cover.png","text":"1. IOC1.1 概念 控制反转，把对象创建和对象之间的调用过程，交给Spring进行管理 好处：降低耦合度 1.2 IOC 底层原理XML解析、工厂模式、反射 1.3 IOC（接口） IOC思想基于IOC容器完成，IOC容器底层就是对象工厂 Spring 提供IOC容器两种实...","link":"","photos":[],"count_time":{"symbolsCount":"62k","symbolsTime":"56 mins."},"categories":[{"name":"Spring","slug":"Spring","count":6,"path":"api/categories/Spring.json"}],"tags":[{"name":"Spring","slug":"Spring","count":8,"path":"api/tags/Spring.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false},"next_post":{"title":"Spring Security + Vue2 + Element-UI 总结","uid":"d525d12dddb4f5a1f4b9cd14617eb49e","slug":"BlogRepository/开发实践/Spring Security + Vue2 + Element-UI 总结","date":"2022-05-08T20:03:09.000Z","updated":"2023-03-13T19:13:04.948Z","comments":true,"path":"api/articles/BlogRepository/开发实践/Spring Security + Vue2 + Element-UI 总结.json","keywords":null,"cover":"https://cover.png","text":"Vue 基础部分见：https://blog.csdn.net/ACE_U_005A&#x2F;article&#x2F;details&#x2F;123573568Vue 开发部分见：https://blog.csdn.net/ACE_U_005A&#x2F;article&#...","link":"","photos":[],"count_time":{"symbolsCount":"142k","symbolsTime":"2:10"},"categories":[{"name":"开发实践","slug":"开发实践","count":5,"path":"api/categories/开发实践.json"}],"tags":[{"name":"Spring","slug":"Spring","count":8,"path":"api/tags/Spring.json"}],"author":{"name":"凡","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/Fan223","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/ACE_U_005A","juejin":"https://juejin.cn/user/1873223546578589","customs":{}}},"feature":false}}